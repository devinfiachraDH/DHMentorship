template_id: HungerStation
meta:
  features:
    is_order_on_time_badge_on: true
    is_new_chat_v_1_enabled: true
    is_chat_persistency_enabled: true
  config:
    base_tweety_url: https://bh.usehurrier.com/app/tweety/web/survey/hungerstation-after-contact-csat-rider
    no_contact_tweety_url: https://bh.usehurrier.com/app/tweety/web/survey/hungerstation-self-service-csat
engine_version: '2'
pages:
  - id: mainMenu
    title: {{ helpcenter_title }}
    blocks:
      - id: static
        type: blockGroup
        blocks:
          - id: howCanWeHelp
            type: heading
            text: {{ how_can_we_help }}
          - id: account
            type: link
            icon: account
            text: {{ my_account }}
            destination: page.1
          - id: orders
            type: link
            icon: orders
            text: {{ my_orders }}
            destination: ordersList
          - id: payment
            type: link
            icon: payment
            text: {{ making_a_payment }}
            destination: page.2
          - id: voucher
            type: link
            icon: voucher
            text: {{ voucher_or_other_promotion }}
            destination: page.3
          - id: cases
            type: link
            icon: cases
            text: {{ my_support_requests }}
            destination: inbox
          - id: faq|workWithUs
            type: link
            icon: coming-soon
            text: {{ work_with_us }}
            destination: page.4
          - id: orders|riderTip
            type: link
            icon: shareTheMeal
            text: {{ should_i_tip }}
            destination: rider_tip_inquiry.1 
  - id: page.1
    title: {{ my_account }}
    blocks:
      - id: account|1
        event_id: account
        type: blockGroup
        blocks:
          - id: account|howCanWeHelp
            type: heading
            text: {{ how_can_we_help }}
          - id: account|updateInfo
            type: link
            text: {{ want_to_update_account_info }}
            destination: change_account_details.1
          - id: account|deleteAccount
            type: link
            text: {{ want_to_delete_my_account }}
            destination: account_deletion.delete_account
          - id: account|questionAboutPrivacy
            type: link
            text: {{ have_question_about_privacy }}
            destination: data_protection_inquiry.1
          - id: account|canNotSignUpPhone
            type: link
            text: {{ can_not_sign_in_using_phone }}
            destination: customer_account.can_not_sign_in_using_phone
          - id: account|noVerificationMessage
            type: link
            text: {{ received_no_verification_message }}
            destination: sms_verification_issue.1
  - id: ordersList
    title: {{ my_orders }}
    blocks:
      - id: orders|info
        text: {{ select_the_order }}
        type: heading
      - id: orders|ordersList
        type: ordersList
        variant: CUSTOMER
        destination: orderDetail
  - id: page.2
    title: {{ making_a_payment }}
    blocks:
      - id: payment|1
        type: blockGroup
        event_id: payment
        blocks:
          - id: payment|orderRelatedQuestions
            type: richContent
            text: {{ this_is_not_place_for_specific_order_questions }}
      - id: paymentLinks
        type: blockGroup
        event_id: paymentLinks
        blocks:
          - id: payment|paymentMethodAdding
            type: link
            text: {{ want_to_add_payment }}
            destination: payment_issue.1
          - id: payment|paymentMethodDeleting
            type: link
            text: {{ want_to_delete_payment }}
            destination: payment_issue.2
          - id: payment|paymentDeclined
            type: link
            text: {{ payment_was_declined }}
            destination: payment_issue.3
          - id: payment|checkoutButtonIssue
            type: link
            text: {{ checkout_button_does_not_work }}
            destination: payment_issue.4
          - id: payment|whichPaymentMethods
            type: link
            text: {{ which_payment_methods_are_available }}
            destination: payment_issue.5
          #- id: payment|anotherPaymentIssue
          #  type: link
          #  text: {{ have_another_payment_issue }}
          #  destination: payment_issue.another_payment_issue
  - id: page.3
    title: {{ voucher_or_other_promotion }}
    meta:
      before_display:
        namespace: customerFraudFlagNS
        action:
          type: getCustomerFraudFlag
    blocks:
      - id: voucher|1
        type: blockGroup
        event_id: voucher
        blocks:
          - id: voucher|howCanWeHelp
            type: heading
            text: {{ how_can_we_help }}
          - id: voucher|howtoRedeemVoucher
            type: link
            text: {{ how_to_redeem_a_voucher }}
            destination: voucher_conditions.1
          - id: voucher|anotherQuestion
            type: link
            text: {{ another_voucher_question }}
            destination: other_voucher_inquiry.another_voucher_question
  - id: inbox
    title: {{ my_support_requests }}
    blocks:
      - id: cases|info
        text: {{ my_support_requests }}
        type: heading
      - id: cases|casesList
        type: casesList
        event_id: cases|casesList
  - id: page.4
    title: {{ work_with_us }}
    blocks:
      - id: faq|workWithUs|1
        type: blockGroup
        event_id: faq|workWithUs
        blocks:
          - id: faq|workWithUs|title
            type: heading
            text: {{ how_can_we_help }}
          - id: faq|workWithUs|becomeADriver
            type: link
            text: {{ how_to_become_a_driver }}
            destination: information_request.1
          - id: faq|workWithUs|workAtFoodora
            type: link
            text: {{ want_to_work_at_foodpanda }}
            destination: information_request.2
          - id: faq|workWithUs|listMyRestaurant
            type: link
            text: {{ list_my_restaurant_on_foodpanda }}
            destination: information_request.3
  - id: change_account_details.1
    title: {{ want_to_update_account_info }}
    blocks:
      - id: account|updateInfo|1
        type: blockGroup
        event_id: account|updateInfo
        deflection_id: 3D.4
        blocks:
          - id: account|updateInfo|text
            type: richContent
            text: {{ how_to_update_account_info }}
  - id: account_deletion.delete_account
    title: {{ want_to_delete_my_account }}
    blocks:
      - id: account|deleteAccount|1
        type: blockGroup
        event_id: account|deleteAccount
        deflection_id: 3D.2
        blocks:
          - id: account|deleteAccount|text
            text: {{ let_us_know_you_want_to_delete_account }}
            type: richContent
          - id: account|deleteAccount|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 3D.2
              subject: delete_account
            fields:
              - id: account|deleteAccount|mobileNumber
                type: textInput
                placeholder: {{ mobile_number }}
                data_key: mobile_number
                is_required: true
              - id: formId
                type: textInput
                placeholder: {{ email_address }}
                data_key: email_address
                is_required: true
              - id: account|deleteAccount|message
                type: textArea
                placeholder: {{ write_something }}
                label: {{ explain_your_reason_for_deletion }}
                data_key: description
                is_required: true
  - id: data_protection_inquiry.1
    title: {{ have_question_about_privacy }}
    blocks:
      - id: account|questionAboutPrivacy|1
        type: blockGroup
        event_id: account|questionAboutPrivacy
        deflection_id: 3D.3
        blocks:
          - id: account|questionAboutPrivacy|intro
            text: {{ explain_how_foodpanda_handles_privacy_data_security }}
            type: richContent
  - id: customer_account.can_not_sign_in_using_phone
    title: {{ can_not_sign_in_using_phone }}
    blocks:
      - id: account|canNotSignUpPhone|1
        type: blockGroup
        event_id: account|canNotSignUpPhone
        deflection_id: 3D
        blocks:
          - id: account|canNotSignUpPhone|text
            text: {{ can_i_use_landline }}
            type: richContent
          - id: account|canNotSignUpPhone|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 3D.5
              subject: can_not_sign_in_using_phone
            fields:
              - id: account|canNotSignUpPhone|mobileNumber
                type: textInput
                placeholder: {{ mobile_number }}
                data_key: mobile_number
                is_required: true
              - id: account|canNotSignUpPhone|emailAddress
                type: textInput
                placeholder: {{ email_address }}
                data_key: email_address
                is_required: true
              - id: account|canNotSignUpPhone|issue
                type: textArea
                placeholder: {{ write_something }}
                label: {{ explain_the_issue }}
                data_key: description
                is_required: true
  - id: sms_verification_issue.1
    title: {{ received_no_verification_message }}
    blocks:
      - id: account|noVerificationMessage|1
        type: blockGroup
        event_id: account|noVerificationMessage
        deflection_id: 3D.5
        blocks:
          - id: account|noVerificationMessage|text
            text: {{ explain_no_verification_messages_solution }}
            type: richContent
  - id: orderDetail
    title: {{ order_details_title }}
    blocks:
      - id: orders|ordersList|orderDetail
        type: selectedOrderDetail
        variant: CUSTOMER
        blocks:
          - id: orders|ordersList|orderDetail|OD
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.status IN [PENDING, TRANSMITTED, ACCEPTED, PICKED_UP, SENT_TO_TRANSMISSION,
                REACHING_TRANSMISSION_FAILED, SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR,
                COURIER_NEAR_PICK_UP, ORDER_PREPARED, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF,
                WAITING_FOR_VALIDATION] AND
                order.delivery_type = platform_delivery
            blocks:
              - id: orders|ordersList|orderDetail|OD|infos|pending
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, WAITING_FOR_VALIDATION] AND
                    order.creation_time BETWEEN 0:10
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|pending|text
                    type: richContent
                    text: {{ received_your_order_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|pendingDelayed
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, WAITING_FOR_VALIDATION] AND
                    order.creation_time >= 10 AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|pendingDelayed|text
                    type: richContent
                    text: {{ taking_longer_than_usual_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|transmitted
                type: blockGroup
                meta:
                  conditions: order.status IN [TRANSMITTED, DISPLAYED_AT_VENDOR]
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|transmitted|text
                    type: richContent
                    text: {{ restaurant_received_your_order_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|accepted
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time < 20 AND
                    customer.subscription.status = False
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|accepted|text
                    type: richContent
                    text: {{ restaurant_preparing_your_meal_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|accepted|HPlus
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time < 0 AND
                    customer.subscription.status = True
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|accepted|HPlus|text
                    type: richContent
                    text: {{ restaurant_preparing_your_meal_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|acceptedDelayed
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time >= 20 AND
                    order.vertical_type NOT IN [charity] AND
                    customer.subscription.status = False
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|acceptedDelayed|text
                    type: richContent
                    text: {{ restaurant_preparing_your_meal_busy_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|acceptedDelayed|HPlus
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time >= 0 AND
                    order.vertical_type NOT IN [charity] AND
                    customer.subscription.status = True
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|acceptedDelayed|HPlus|text
                    type: richContent
                    text: {{ restaurant_preparing_your_meal_busy_compact }}
              - id: orders|ordersList|orderDetail|OD|infos|pickedUp
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|pickedUp|text
                    type: richContent
                    text: {{ rider_picked_up_your_meal_compact }}
              - id: orders|ordersList|orderDetail|HS|BeforePickedUp|DelayIssue
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PENDING, TRANSMITTED, ACCEPTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, COURIER_NEAR_PICK_UP,
                    ORDER_PREPARED] AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|orderStatus|vendorLate
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = vendor_late
                    text: {{ status_vendor_late }}
                  - id: orders|ordersList|orderDetail|orderStatus|riderLate
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = rider_late
                    text: {{ status_rider_late }}
                  - id: orders|ordersList|orderDetail|orderStatus|changeInStaffing
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = change_in_staffing
                    text: {{ status_change_in_staffing }}
                  - id: orders|ordersList|orderDetail|orderStatus|saturatedFleet
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = saturated_fleet
                    text: {{ status_saturated_fleet }}
                  - id: orders|ordersList|orderDetail|orderStatus|overallLate
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = overall_order_late
                    text: {{ status_overall_late }}
              - id: orders|ordersList|orderDetail|HS|AfterPickedUp|DelayIssue
                type: blockGroup
                meta:
                  conditions:
                    order.delivery_type = platform_delivery AND
                    order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|HS|AfterPickedUp|DelayIssue|vendorLate
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = vendor_late
                    text: {{ status_vendor_late_v2 }}
                  - id: orders|ordersList|orderDetail|HS|AfterPickedUp|DelayIssue|riderLate
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = rider_late
                    text: {{ status_rider_late_v2 }}
                  - id: orders|ordersList|orderDetail|HS|AfterPickedUp|DelayIssue|changeInStaffing
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = change_in_staffing
                    text: {{ status_change_in_staffing_v2 }}
                  - id: orders|ordersList|orderDetail|HS|AfterPickedUp|DelayIssue|saturatedFleet
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = saturated_fleet
                    text: {{ status_saturated_fleet_v2 }}
                  - id: orders|ordersList|orderDetail|HS|AfterPickedUp|DelayIssue|overallLate
                    type: richContent
                    meta:
                      conditions: order.courier.delay_reason = overall_order_late
                    text: {{ status_overall_late_v2 }}
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|pending|ontime
                meta:
                  conditions:
                    order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, WAITING_FOR_VALIDATION] AND
                    order.creation_time BETWEEN 0:10 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.1
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|transmitted|ontime
                meta:
                  conditions:
                    order.status IN [TRANSMITTED, DISPLAYED_AT_VENDOR] AND
                    order.original_promised_time < 10 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.1A
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|acceptedpickedup|ontime|restaurants
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time < 20 AND
                    customer.subscription.status = False AND
                    order.vertical_type = restaurants
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.1B
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|acceptedpickedup|ontime|restaurants|HPlus
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time < 0 AND
                    customer.subscription.status = True AND
                    order.vertical_type = restaurants
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.1B
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|acceptedpickedupother|ontime
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time < 20 AND
                    order.vertical_type NOT IN [restaurants, charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.1C
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|acceptedpickedupother|ontime|HPlus
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time < 0 AND
                    order.vertical_type NOT IN [restaurants, charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.1C
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|pending|delay
                meta:
                  conditions:
                    order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, WAITING_FOR_VALIDATION] AND
                    order.creation_time >= 10 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.3
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|transmitted|delay
                meta:
                  conditions:
                    order.status IN [TRANSMITTED, DISPLAYED_AT_VENDOR] AND
                    order.original_promised_time >= 10 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.3A
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|reactivecomp|shortdelay
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time BETWEEN 20:35 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.4
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|reactivecomp|shortdelay|HPlus
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time BETWEEN 0:20 AND
                    order.vertical_type NOT IN [charity] AND
                    customer.subscription.status = True
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.4_1  
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|reactivecomp|moderatedelay
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time BETWEEN 35:50 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.5
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|reactivecomp|severedelay
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time BETWEEN 50:65 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.6
              - id: orders|ordersList|orderDetail|OD|whereIsOrder|reactivecomp|extremedelay
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                    COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                    order.original_promised_time >= 65 AND
                    order.vertical_type NOT IN [charity]
                text: {{ where_is_myorder }}
                type: link
                destination: complain_about_late_order.7
              - id: orders|ordersList|orderDetail|OD|addDeliveryInstructions
                type: link
                text: {{ add_delivery_instructions_link }}
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.delivery_type = platform_delivery AND
                    order.vertical_type NOT IN [charity]
                destination: change_delivery_instructions.1
              - id: orders|ordersList|orderDetail|OD|changeOrder
                type: link
                text: {{ customer_address_issues }}
                meta:
                  conditions:
                    order.status IN [PENDING, TRANSMITTED, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR,
                    ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP, COURIER_LEFT_PICK_UP,
                    COURIER_NEAR_DROP_OFF] AND
                    order.delivery_type = platform_delivery AND
                    order.vertical_type NOT IN [charity]
                destination: change_order_details.1
              - id: orders|ordersList|orderDetail|OD|voucherDoesNotWork
                type: link
                text: {{ my_voucher_wasnt_applied }}
                meta:
                  conditions:
                    order.creation_time BETWEEN 0:10 AND
                    order.vertical_type NOT IN [charity]
                destination: voucher_cannot_apply.voucher_doesnt_work
              - id: orders|ordersList|orderDetail|OD|infos|accepted|cancellation|postVA
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time > 60 AND
                    order.payment_type = OP AND
                    order.vertical_type = restaurants
                blocks:
                  - id: orders|ordersList|orderDetail|OD|infos|accepted|cancellation|postVA|refundTrue
                    type: link
                    text: {{ want_to_cancel_my_order }}
                    destination: cancellation.cancel_accepted_order_refund_true
              - id: orders|ordersList|orderDetail|OD|cancelMyOrder
                text: {{ want_to_cancel_my_order }}
                type: link
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    AND
                    order.original_promised_time >= 20 AND
                    order.original_promised_time <= 60 AND
                    order.vertical_type NOT IN [charity]
                destination: cancellation.cancel_order_pickedup_late
              - id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpEarly
                event_id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpEarly
                deflection_id: 1C
                text: {{ want_to_cancel_my_order }}
                type: accordion
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    AND
                    order.original_promised_time < 20 AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpEarly|text
                    type: richContent
                    text: {{ cancel_order_not_possible_picked }}
              - id: orders|ordersList|orderDetail|OD|cancelMyOrder|AcceptedLate
                text: {{ want_to_cancel_my_order }}
                type: link
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time >= 20 AND
                    order.original_promised_time <= 60 AND
                    order.vertical_type NOT IN [charity]
                destination: cancellation.cancel_order_accepted_late
              - id: orders|ordersList|orderDetail|OD|cancelMyOrder|Accepted
                event_id: orders|ordersList|orderDetail|OD|cancelMyOrder|Accepted
                deflection_id: 1C
                text:  {{ want_to_cancel_my_order }}
                type: accordion
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time < 20 AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|OD|cancelMyOrder|Accepted|text
                    type: richContent
                    text: {{ cancel_order_not_possible_accepted }}
          - id: orders|ordersList|orderDetail|ODDelivered
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.status = DELIVERED AND
                order.delivery_type = platform_delivery AND
                order.creation_time < 720
            blocks:
              - id: orders|ordersList|orderDetail|ODDelivered|infos
                type: blockGroup
                blocks:
                  - id: orders|ordersList|orderDetail|ODDelivered|infos|text
                    type: richContent
                    text: {{ your_order_is_delivered }}
              - id: orders|ordersList|orderDetail|ODDelivered|markedAsDelivered
                type: link
                text: {{ marked_as_deleted_but_not_arrived }}
                meta:
                  conditions:
                    order.delivered_time BETWEEN 0:60 AND
                    order.vertical_type NOT IN [charity]
                destination: order_marked_as_delivered_but_didnt_receive.mark_as_delivered_but_not_received
              - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems
                type: link
                text: {{ missing_items_delivered }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: missing_item.missing_items
              - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|wrongItems
                type: link
                text: {{ wrong_items_delivered }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: wrong_item.wrong_items
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue
                type: link
                text: {{ food_issue_delivered }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: page.5
              - id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder
                type: link
                text: {{ wrong_order_received }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: wrong_order.received_wrong_order_refund
              - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund
                type: link
                text: {{ i_have_a_question_about_payment_or_refund }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: page.6
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback
                type: link
                text: {{ give_feedback_to_rider }}
                meta:
                  conditions:
                    order.vertical_type NOT IN [charity] AND
                    order.payment_method NOT IN [cash, wallet] AND
                    order.delivered_time <= 2880
                destination: rider_issue.rider_feedback
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback1
                type: link
                text: {{ give_feedback_to_rider }}
                meta:
                  conditions:
                    order.vertical_type NOT IN [charity] AND
                    order.payment_method IN [cash, wallet] AND
                    order.delivered_time <= 2880
                destination: rider_issue.rider_feedback1
              - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime
                type: link
                meta:
                  conditions:
                    order.original_promised_time >= 15 AND
                    order.vertical_type NOT IN [charity]
                text: {{ not_arrived_on_time }}
                destination: delivery_time.not_arrived_on_time
          - id: orders|ordersList|orderDetail|ODDeliveredLate
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.status = DELIVERED AND
                order.delivery_type = platform_delivery AND
                order.creation_time >= 720
            blocks:
              - id: orders|ordersList|orderDetail|ODDeliveredLate|infos
                type: blockGroup
                blocks:
                  - id: orders|ordersList|orderDetail|ODDeliveredLate|infos|text
                    type: richContent
                    text: {{ your_order_is_delivered }}
              - id: orders|ordersList|orderDetail|ODDeliveredLate|paymentOrRefund
                type: link
                text: {{ i_have_a_question_about_payment_or_refund }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: page.6
              - id: orders|ordersList|orderDetail|ODDeliveredLate|riderFeedback
                type: link
                text: {{ give_feedback_to_rider }}
                meta:
                  conditions:
                    order.vertical_type NOT IN [charity] AND
                    order.payment_method NOT IN [cash, wallet] AND
                    order.delivered_time <= 2880
                destination: rider_issue.rider_feedback
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback2
                type: link
                text: {{ give_feedback_to_rider }}
                meta:
                  conditions:
                    order.vertical_type NOT IN [charity] AND
                    order.payment_method IN [cash, wallet] AND
                    order.delivered_time <= 2880
                destination: rider_issue.rider_feedback1
          - id: orders|ordersList|orderDetail|VD
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.delivery_type = vendor_delivery AND
                order.status IN [PENDING, ACCEPTED, TRANSMITTED, PICKED_UP, SENT_TO_TRANSMISSION,
                REACHING_TRANSMISSION_FAILED, SENT_TO_LOGISTICS, SENDING_TO_VENDOR, COURIER_NEAR_PICK_UP,
                ORDER_PREPARED, DISPLAYED_AT_VENDOR, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF,
                WAITING_FOR_VALIDATION]
            blocks:
              - id: orders|ordersList|orderDetail|VD|infos|pendingTransmitted
                type: blockGroup
                meta:
                  conditions: order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
                blocks:
                  - id: orders|ordersList|orderDetail|VD|infos|pending|text
                    type: richContent
                    meta:
                      conditions: order.vertical_type NOT IN [charity]
                    text: {{ restaurant_received_your_order_compact }}
              - id: orders|ordersList|orderDetail|VD|infos|accepted
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time < 20 AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|VD|infos|accepted|text
                    type: richContent
                    text: {{ restaurant_preparing_your_meal_compact }}
              - id: orders|ordersList|orderDetail|VD|infos|acceptedDelayed
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.original_promised_time >= 20 AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|VD|infos|acceptedDelayed|text
                    type: richContent
                    text: {{ restaurant_preparing_your_meal_busy_compact }}
              - id: orders|ordersList|orderDetail|VD|infos|pickedUp
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    AND
                    order.vertical_type NOT IN [charity]
                blocks:
                  - id: orders|ordersList|orderDetail|VD|infos|pickedUp|text
                    type: richContent
                    text: {{ restaurant_riders_on_their_way_compact }}
              - id: orders|ordersList|orderDetail|VD|whereIsOrder
                text: {{ where_is_myorder }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                type: link
                destination: complain_about_late_order.2
              - id: orders|ordersList|orderDetail|VD|changeOrder
                text: {{ want_to_change_my_order }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                type: link
                destination: change_order_details.2
              - id: orders|ordersList|orderDetail|VD|cancelMyOrder
                text: {{ want_to_cancel_my_order }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                type: link
                destination: cancellation.1
              - id: orders|ordersList|orderDetail|VD|charity
                type: blockGroup
                blocks:
                  - id: shareTheMeal|whyDonate|text1
                    type: richContent
                    text: {{ leaf_why_donate }}
          - id: orders|ordersList|orderDetail|VDDelivered
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.status = DELIVERED AND
                order.delivery_type = vendor_delivery AND
                order.creation_time < 1440
            blocks:
              - id: orders|ordersList|orderDetail|VDDelivered|infos
                type: blockGroup
                blocks:
                  - id: orders|ordersList|orderDetail|VDDelivered|infos|text
                    type: richContent
                    meta:
                      conditions: order.vertical_type NOT IN [charity]
                    text: {{ your_order_is_delivered }}
              - id: liveOrder|orderDetail|VDDelivered|isntDeliveredYet
                type: link
                text: {{ my_order_isnt_delivered_yet_text }}
                meta:
                  conditions: order.vertical_type NOT IN [charity]
                destination: order_marked_as_delivered_but_didnt_receive.marked_as_deleted_but_not_arrived
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|restaurant
                type: link
                text: {{ missing_items_delivered }}
                meta:
                  conditions:
                    order.vertical_type = restaurants AND
                    order.status = DELIVERED
                destination: missing_item.missing_items_3
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems
                type: link
                meta:
                  conditions:
                    order.vertical_type NOT IN [restaurants, charity] AND
                    order.status = DELIVERED
                text: {{ missing_items_delivered }}
                destination: missing_item.missing_items_4
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|restaurant
                type: link
                text: {{ wrong_items_delivered }}
                meta:
                  conditions:
                    order.vertical_type = restaurants AND
                    order.status = DELIVERED
                destination: wrong_item.wrong_items_3
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongItems
                type: link
                meta:
                  conditions:
                    order.vertical_type NOT IN [restaurants, charity] AND
                    order.status = DELIVERED
                text: {{ wrong_items_delivered }}
                destination: wrong_item.wrong_items_4
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue
                type: link
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type NOT IN [charity]
                text: {{ food_issue_delivered }}
                destination: damaged_item.1
              - id: orders|ordersList|orderDetail|VDDelivered|receivedWrongOrder
                type: link
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type NOT IN [charity]
                text: {{ wrong_order_received }}
                destination: wrong_order.recent_refund
              - id: orders|ordersList|orderDetail|VDDelivered|paymentOrRefund
                type: link
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type NOT IN [charity]
                text: {{ i_have_a_question_about_payment_or_refund }}
                destination: page.6
              - id: orders|ordersList|orderDetail|VDDelivered|riderFeedback
                type: link
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type NOT IN [charity] AND
                    order.delivered_time <= 2880
                text: {{ give_feedback_to_rider }}
                destination: rider_issue.rider_feedback
              - id: orders|ordersList|orderDetail|VDDelivered|notArrivedOnTime
                type: link
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type NOT IN [charity]
                text: {{ not_arrived_on_time }}
                destination: delivery_time.not_arrived_on_time_2
              - id: orders|ordersList|orderDetail|VDDelivered|charity
                type: blockGroup
                blocks:
                  - id: shareTheMeal|whyDonate|text
                    type: richContent
                    text: {{ leaf_why_donate }}
          - id: orders|ordersList|orderDetail|VDDeliveredLate
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.status = DELIVERED AND
                order.delivery_type = vendor_delivery AND
                order.creation_time >= 1440
            blocks:
              - id: orders|ordersList|orderDetail|VDDeliveredLate|infos
                type: blockGroup
                blocks:
                  - id: orders|ordersList|orderDetail|VDDeliveredLate|infos|text
                    type: richContent
                    text: {{ your_order_is_delivered }}
              - id: orders|ordersList|orderDetail|VDDeliveredLate|paymentOrRefund
                type: link
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type NOT IN [charity]
                text: {{ i_have_a_question_about_payment_or_refund }}
                destination: page.6
          - id: orders|ordersList|orderDetail|cancelled
            type: blockGroup
            meta:
              conditions:
                order.corporate = False AND
                order.status IN [CANCELLED, REJECTED, EXPIRED, PENDING_ORDER_FAILED]
            blocks:
              - id: orders|ordersList|orderDetail|cancelled|whyCancelled
                type: link
                text: {{ why_was_my_order_cancelled }}
                destination: inappropriate_behaviour.1
              - id: orders|ordersList|orderDetail|cancelled|refund
                type: link
                text: {{ will_i_get_refund }}
                destination: payment_issue.cancelled_was_charged_past_turnaround
              - id: orders|ordersList|orderDetail|cancelled|whatHappensToVoucherRedeemed
                type: link
                text: {{ what_happens_to_voucher_redeemed }}
                destination: payment_issue.what_happens_to_voucher_redeemed
              - id: orders|ordersList|orderDetail|cancelled|differentIssue
                type: link
                text: {{ i_have_a_different_issue }}
                destination: information_request.i_have_a_different_issue
          - id: orders|ordersList|orderDetail|PU
            type: blockGroup
            event_id: orders|ordersList|orderDetail|PU
            meta:
              conditions:
                order.corporate = False AND
                order.status IN [PENDING, TRANSMITTED, ACCEPTED, PICKED_UP, SENT_TO_TRANSMISSION,
                REACHING_TRANSMISSION_FAILED, SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR,
                COURIER_NEAR_PICK_UP, ORDER_PREPARED, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF,
                WAITING_FOR_VALIDATION, DELIVERED] AND
                order.delivery_type = pickup AND
                order.vertical_type IN [restaurants, darkstores, groceries, flowers, cosmetics,
                health_supplements, pharmacies, pets, drinks, cross_vertical, electronics, baby_supplies,
                furniturebags_and_luggage, toys, optics, coffee, shop, courier_business, cash,
                bakery]
            blocks:
              - id: orders|ordersList|orderDetail|PU|pending
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, TRANSMITTED, DISPLAYED_AT_VENDOR,
                    WAITING_FOR_VALIDATION] AND
                    order.delivery_type = pickup
                blocks:
                  - id: orders|ordersList|orderDetail|PU|pending|text
                    type: richContent
                    text: {{ received_your_order_compact }}
              - id: orders|ordersList|orderDetail|PU|cancelMyOrder
                text: {{ want_to_cancel_my_order }}
                type: link
                meta:
                  conditions:
                    order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, TRANSMITTED, DISPLAYED_AT_VENDOR,
                    WAITING_FOR_VALIDATION] AND
                    order.delivery_type = pickup
                destination: cancellation.picked_up
              - id: orders|ordersList|orderDetail|PU|accepted|location
                text: {{ cant_find_pickup_location }}
                type: link
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.delivery_type = pickup
                destination: need_help_locating_partner_for_pickup.picked_up
              - id: orders|ordersList|orderDetail|PU|accepted|vendorclosed
                text: {{ vendor_closed }}
                type: link
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.delivery_type = pickup
                destination: page.30
              - id: orders|ordersList|orderDetail|PU|accepted|delayinpreperation
                text: {{ order_delayed_preperation }}
                type: link
                meta:
                  conditions:
                    order.status IN [PENDING, TRANSMITTED, ACCEPTED, COURIER_NEAR_DROP_OFF]
                    AND
                    order.creation_time < 25 AND
                    order.delivery_type = pickup
                destination: page.31
              - id: orders|ordersList|orderDetail|PU|accepted|missing
                text: {{ missing_items_pickup }}
                type: link
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_NEAR_PICK_UP, ORDER_PREPARED, DELIVERED]
                    AND
                    order.delivery_type = pickup
                destination: missing_item.picked_up
              - id: orders|ordersList|orderDetail|PU|accepted|wrong
                text: {{ wrong_item_pickup }}
                type: link
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_NEAR_PICK_UP, ORDER_PREPARED, DELIVERED]
                    AND
                    order.delivery_type = pickup
                destination: wrong_item.picked_up
              - id: orders|ordersList|orderDetail|PU|accepted|didNotReceiveOrder
                text: {{ did_not_receive_order }}
                type: link
                meta:
                  conditions:
                    order.status IN [PICKED_UP, ORDER_PREPARED, DELIVERED] AND
                    order.delivery_type = pickup
                destination: order_marked_as_delivered_but_didnt_receive.picked_up
              - id: orders|ordersList|orderDetail|PU|voucher
                text: {{ my_voucher_was_not_applied }}
                type: link
                meta:
                  conditions:
                    order.status IN [PENDING, TRANSMITTED, ACCEPTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, COURIER_NEAR_PICK_UP,
                    ORDER_PREPARED, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF, WAITING_FOR_VALIDATION]
                    AND
                    order.delivery_type = pickup
                destination: other_voucher_inquiry.picked_up
              - id: orders|ordersList|orderDetail|PU|differentIssue
                text: {{ different_issue }}
                type: link
                meta:
                  conditions:
                    order.status IN [PICKED_UP, DELIVERED] AND
                    order.delivery_type = pickup
                destination: information_request.different_issue_3
          - id: orders|ordersList|orderDetail|corporate
            type: blockGroup
            event_id: orders|ordersList|orderDetail|corporate
            meta:
              conditions:
                order.corporate = True AND
                order.vertical_type IN [restaurants, darkstores, groceries, flowers, cosmetics,
                health_supplements, pharmacies, pets, drinks, cross_vertical, electronics, baby_supplies,
                furniturebags_and_luggage, toys, optics, coffee, shop, courier_business, cash,
                bakery]
            blocks:
              - id: orders|ordersList|orderDetail|corporate|chat
                type: form
                submit_text: {{ start_chat }}
                action: chat
                constants:
                  subject: corporate
                  reason_code: '1'
          - id: orders|ordersList|orderDetail|courier
            type: blockGroup
            event_id: orders|ordersList|orderDetail|courier
            meta:
              conditions: order.vertical_type = courier
            blocks:
              - id: orders|ordersList|orderDetail|courier|pendingTransmitted
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
                    SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
                    AND
                    order.vertical_type = courier
                blocks:
                  - id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder
                    text: {{ where_is_my_order_courier }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.my_order_is_pending_delayed
                  - id: orders|ordersList|orderDetail|courier|cancelMyOrder
                    text: {{ cancel_my_order_courier_btn }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.cancel_not_accepted_order
              - id: orders|ordersList|orderDetail|courier|accepted
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                    order.vertical_type = courier
                blocks:
                  - id: orders|ordersList|orderDetail|courier|accepted|whereIsOrder
                    text: {{ where_is_my_order_courier }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.1
                  - id: orders|ordersList|orderDetail||courier|needSupportFromMyRider|accepted
                    text: {{ different_issue_courier_btn }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.courier_need_support
                  - id: orders|ordersList|orderDetail|courier|cancelMyOrder|1
                    text: {{ cancel_my_order_courier_btn }}
                    type: link
                    meta:
                      conditions: order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED]
                    destination: restaurant_hasnt_started_preparing_the_food.cancel_accepted_order
              - id: orders|ordersList|orderDetail|courier|pickedUp
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    AND
                    order.vertical_type = courier
                blocks:
                  - id: orders|ordersList|orderDetail|courier|pickedUp|whereIsOrder
                    text: {{ where_is_my_order_courier }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.2
                  - id: liveOrder|orderDetailcourier|needSupportFromMyRider
                    text: {{ need_support_from_rider_courier_btn }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.courier_need_support_2
                  - id: orders|ordersList|orderDetail|courier|needSupportFromMyRider
                    text: {{ payment_issue_courier_btn }}
                    type: link
                    destination: restaurant_hasnt_started_preparing_the_food.courier_need_support_3
                  - id: orders|ordersList|orderDetail|courier|cancelMyOrder|2
                    text: {{ cancel_my_order_courier_btn }}
                    type: link
                    meta:
                      conditions: order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
                    destination: restaurant_hasnt_started_preparing_the_food.cancel_picked_up_order
              - id: orders|ordersList|orderDetail|courier|deliveredEarly
                type: blockGroup
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type = courier AND
                    order.delivered_time < 1440
                blocks:
                  - id: orders|ordersList|orderDetail|courier|Delivered|markedAsDelivered
                    text: {{ marked_as_delivered_didnt_receive_courier_btn }}
                    type: link
                    destination: order_marked_as_delivered_but_didnt_receive.marked_as_deleted_but_not_arrived_2
                  - id: orders|ordersList|orderDetail|courier|Delivered|wrongMissingItems
                    text: {{ wrong_missing_items_courier_btn }}
                    type: link
                    destination: wrong_missing_item.wrong_missing_items
                  - id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider
                    text: {{ rider_feedback_courier_btn }}
                    type: link
                    destination: rider_issue.rider_feedback_3
                  - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment
                    text: {{ question_on_payment_courier_btn }}
                    type: link
                    destination: payment_and_refunds.1
                  - id: orders|ordersList|orderDetail|courier|Delivered|differentIssue
                    text: {{ different_issue_courier_btn }}
                    type: link
                    destination: post_delivery.didnt_receive_invoice
              - id: orders|ordersList|orderDetail|courier|deliveredLate
                type: blockGroup
                meta:
                  conditions:
                    order.status = DELIVERED AND
                    order.vertical_type = courier AND
                    order.delivered_time >= 1440
                blocks:
                  - id: orders|ordersList|orderDetail|courier|DeliveredLate|differentIssue
                    text: {{ different_issue_courier_btn }}
                    type: link
                    destination: post_delivery.didnt_receive_invoice
              - id: orders|ordersList|orderDetail|courier|cancelled|OP
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [CANCELLED, EXPIRED, PENDING_ORDER_FAILED] AND
                    order.vertical_type = courier AND
                    order.payment_type = OP
                blocks:
                  - id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund
                    text: {{ when_will_get_refund_courier_btn }}
                    type: link
                    destination: refund_query.refund_query
                  - id: orders|ordersList|orderDetail|courier|cancelled|OP|differentIssue
                    text: {{ different_issue_courier_btn }}
                    type: link
                    destination: post_delivery.didnt_receive_invoice
              - id: orders|ordersList|orderDetail|courier|cancelled|COD
                type: blockGroup
                meta:
                  conditions:
                    order.status IN [CANCELLED, EXPIRED, PENDING_ORDER_FAILED] AND
                    order.vertical_type = courier AND
                    order.payment_type = COD
                blocks:
                  - id: orders|ordersList|orderDetail|courier|cancelled|COD|differentIssue
                    text: {{ different_issue_courier_btn }}
                    type: link
                    destination: post_delivery.didnt_receive_invoice
  - id: payment_issue.1
    title: {{ want_to_add_payment }}
    blocks:
      - id: payment|paymentMethodAdding|1
        type: blockGroup
        event_id: payment|paymentMethodAdding
        deflection_id: 3B
        blocks:
          - id: payment|paymentMethodAdding|text
            type: richContent
            text: {{ explain_how_to_add_payment }}
  - id: payment_issue.2
    title: {{ want_to_delete_payment }}
    blocks:
      - id: payment|paymentMethodDeleting|1
        type: blockGroup
        event_id: payment|paymentMethodDeleting
        deflection_id: 3B
        blocks:
          - id: payment|paymentMethodDeleting|text
            type: richContent
            text: {{ explain_how_to_delete_payment }}
  - id: payment_issue.3
    title: {{ payment_was_declined }}
    blocks:
      - id: payment|paymentDeclined|1
        type: blockGroup
        event_id: payment|paymentDeclined
        deflection_id: 3B
        blocks:
          - id: payment|paymentDeclined|text
            type: richContent
            text: {{ explain_why_a_payment_might_be_declined }}
  - id: payment_issue.4
    title: {{ checkout_button_does_not_work }}
    blocks:
      - id: payment|checkoutButtonIssue|1
        type: blockGroup
        event_id: payment|checkoutButtonIssue
        deflection_id: 3B
        blocks:
          - id: payment|checkoutButtonIssue|text
            type: richContent
            text: {{ explain_why_checkout_button_is_not_working }}
  - id: payment_issue.5
    title: {{ which_payment_methods_are_available }}
    blocks:
      - id: payment|whichPaymentMethods|1
        type: blockGroup
        event_id: payment|whichPaymentMethods
        deflection_id: 3B
        blocks:
          - id: payment|whichPaymentMethods|text
            type: richContent
            text: {{ explain_available_payment_options }}
  - id: payment_issue.another_payment_issue
    title: {{ have_another_payment_issue }}
    blocks:
      - id: payment|anotherPaymentIssue|1
        type: blockGroup
        event_id: payment|anotherPaymentIssue
        deflection_id: 3B
        blocks:
          - id: payment|anotherPaymentIssue|intro
            text: {{ payment_other_question_intro }}
            type: richContent
          - id: payment|anotherPaymentIssue|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 3B.1
              subject: another_payment_issue
            fields:
              - id: payment|anotherPaymentIssue|form|issue
                type: textArea
                placeholder: {{ write_something }}
                label: {{ explain_the_issue }}
                data_key: description
                is_required: true
  - id: voucher_conditions.1
    title: {{ how_to_redeem_a_voucher }}
    blocks:
      - id: voucher|howtoRedeemVoucher|1
        type: blockGroup
        event_id: voucher|howtoRedeemVoucher
        deflection_id: 3C.2
        blocks:
          - id: voucher|howtoRedeemVoucher|text
            type: richContent
            text: {{ redeem_a_voucher_version3 }}
  - id: voucher_cannot_apply.voucher_doesnt_work
    title: {{ voucher_code_does_not_work }}
    blocks:
      - id: voucher|voucherDoesNotWork|text
        type: richContent
        text: {{ live_order_voucher_does_not_work }}
      - id: voucher|voucherDoesNotWork|chat
        type: form
        submit_text: {{ start_chat }}
        action: chat
        constants:
          reason_code: 3C.4
          subject: voucher_doesnt_work
        fields:
          - id: voucher|voucherDoesNotWork|chat|message
            type: textArea
            label: {{ explain_voucher_message }}
            data_key: description
            is_required: true
  - id: other_voucher_inquiry.another_voucher_question
    title: {{ another_voucher_question }}
    blocks:
      - id: voucher|anotherQuestion|1
        type: blockGroup
        event_id: voucher|anotherQuestion
        deflection_id: 3C.8
        blocks:
          - id: voucher|anotherQuestion|text
            text: {{ voucher_other_question_intro }}
            type: richContent
          - id: voucher|anotherQuestion|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 3C.8
              subject: another_voucher_question
            fields:
              - id: voucher|anotherQuestion|form|question
                type: textArea
                is_required: true
                placeholder: {{ write_something }}
                label: {{ your_question }}
                data_key: description
        meta:
          conditions: customer.subscription.status = True
      - id: voucher|anotherQuestion|1|optimisationv3script
        type: blockGroup
        event_id: voucher|anotherQuestion|1|optimisationv3script
        deflection_id: 3C.8
        blocks:
          - id: voucher|anotherQuestion|1|optimisationv3script|content
            type: richContent
            text: {{ other_voucher_inquiry_instructions }}
            deflection_id: 3C.8
        meta:
          conditions: customer.subscription.status != True
  - id: information_request.1
    title: {{ how_to_become_a_driver }}
    blocks:
      - id: faq|workWithUs|becomeADriver|1
        type: blockGroup
        event_id: faq|workWithUs|becomeADriver
        deflection_id: 3E
        blocks:
          - id: faq|workWithUs|becomeADriver|linkToDriverJobs
            type: richContent
            text: {{ apply_to_driver_jobs_text_link }}
  - id: information_request.2
    title: {{ want_to_work_at_foodpanda }}
    blocks:
      - id: faq|workWithUs|workAtFoodora|1
        type: blockGroup
        event_id: faq|workWithUs|workAtFoodora
        deflection_id: 3E
        blocks:
          - id: faq|workWithUs|workAtFoodora|linkToGeneralJobs
            type: richContent
            text: {{ apply_to_general_jobs_text_link }}
  - id: information_request.3
    title: {{ list_my_restaurant_on_foodpanda }}
    blocks:
      - id: faq|workWithUs|listMyRestaurant|1
        type: blockGroup
        event_id: faq|workWithUs|listMyRestaurant
        deflection_id: 3E
        blocks:
          - id: faq|workWithUs|listMyRestaurant|intro
            type: richContent
            text: {{ instructions_to_list_your_restaurant }}
          - id: faq|workWithUs|listMyRestaurant|howItWorks
            type: richContent
            text: {{ how_does_a_partnership_with_foodpanda_work }}
          - id: faq|workWithUs|listMyRestaurant|explainHowItWorks
            type: richContent
            text: {{ explain_how_partnership_with_foodpanda_works }}
  - id: complain_about_late_order.1
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|pending
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|pending
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions:
            order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED, SENT_TO_LOGISTICS,
            SENDING_TO_VENDOR, WAITING_FOR_VALIDATION] AND
            order.creation_time BETWEEN 0:10
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|pending|text
            type: richContent
            text: {{ received_your_order }}
  - id: complain_about_late_order.1A
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|transmitted
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|transmitted
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions:
            order.status IN [TRANSMITTED, DISPLAYED_AT_VENDOR] AND
            order.original_promised_time < 10
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|transmitted|text
            type: richContent
            text: {{ restaurant_received_your_order }}
  - id: complain_about_late_order.1B
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted|restaurants
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted|restaurants
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.original_promised_time < 20 AND
            order.vertical_type = restaurants
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted|text
            type: richContent
            text: {{ vendor_preparing_your_order }}
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted|backToOrderButton
            type: deepLink
            deeplink_url: hungerstation://?c=SA&s=o&id=<<order_id>>
            deeplink_title: otp_deeplink
            submit_text: {{button_back_to_order}}   
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp|restaurants
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp|restaurants
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions:
            order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
            order.original_promised_time < 20 AND
            order.vertical_type = restaurants
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp|text
            type: richContent
            text: {{ rider_pickedup_your_order }}
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp|backToOrderButton
            type: deepLink
            deeplink_url: hungerstation://?c=SA&s=o&id=<<order_id>>
            deeplink_title: otp_deeplink
            submit_text: {{button_back_to_order}}   
  - id: complain_about_late_order.1C
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.original_promised_time < 20 AND
            order.vertical_type NOT IN [restaurants]
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted|text|1
            type: richContent
            text: {{ localshops_preparing_your_order }}
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|accepted|backToOrderButton
            type: deepLink
            deeplink_url: hungerstation://?c=SA&s=o&id=<<order_id>>
            deeplink_title: otp_deeplink
            submit_text: {{button_back_to_order}}   
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions:
            order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
            order.original_promised_time < 20 AND
            order.vertical_type NOT IN [restaurants]
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp|text|1
            type: richContent
            text: {{ rider_pickedup_your_order  }}
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|pickedUp|backToOrderButton
            type: deepLink
            deeplink_url: hungerstation://?c=SA&s=o&id=<<order_id>>
            deeplink_title: otp_deeplink
            submit_text: {{button_back_to_order}}   
  - id: complain_about_late_order.3
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|pendingDelayed
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|pendingDelayed
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions:
            order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED, SENT_TO_LOGISTICS,
            SENDING_TO_VENDOR, WAITING_FOR_VALIDATION] AND
            order.creation_time >= 10
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|pendingDelayed|text
            type: richContent
            text: {{ order_transmission_taking_longer_than_usual }}
  - id: complain_about_late_order.3A
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|transmittedLate
        event_id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|transmittedLate
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions:
            order.status IN [TRANSMITTED, DISPLAYED_AT_VENDOR] AND
            order.original_promised_time >= 10
        blocks:
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|transmittedLate|text
            type: richContent
            text: {{ restaurant_received_your_order }}
          - id: orders|ordersList|orderDetail|OD|whereIsOrder|delay|transmittedLate|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.5
              subject: my_order_is_transmitted_late
  - id: complain_about_late_order.4
    title: {{ where_is_myorder }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 1A.12
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: whereIsOrder|shortDelay|reactiveComp|voucherAlreadyCreated|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_description_rc }}
      - id: whereIsOrder|shortDelay|reactiveComp|409|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_already_created, order_already_compensated_external]
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|409|evaluate|text
            type: richContent
            text: {{ action_already_taken_rc }}
      - id: whereIsOrder|shortDelay|reactiveComp|noRecommendation|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_rc }}
          - id: whereIsOrder|shortDelay|reactiveComp|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.12
      - id: whereIsOrder|shortDelay|reactiveComp|fraudCheckBlock|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_rc }}
          - id: whereIsOrder|shortDelay|reactiveComp|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.12
      - id: whereIsOrder|shortDelay|reactiveComp|fraudCaseCreated|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_rc }}
      - id: whereIsOrder|shortDelay|reactiveComp|caseCreated|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = case_created
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|caseCreated|evaluate|text
            type: richContent
            text: {{ case_created_rc }}
      - id: whereIsOrder|shortDelay|reactiveComp|routeToChat|evaluate
        deflection_id: 1A.12
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|routeToChat|evaluate|text
            type: richContent
            text: {{ route_to_chat_rc }}
          - id: whereIsOrder|shortDelay|reactiveComp|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.12
      - id: whereIsOrder|shortDelay|reactiveComp|applyReq
        type: blockGroup
        deflection_id: 1A.12
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: whereIsOrder|shortDelay|reactiveComp|compensation|text|accepted
            type: richContent
            text: {{ moderate_severe_accepted_reactiveComp }}
            meta:
              conditions:
                order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                order.original_promised_time BETWEEN 20:35
          - id: whereIsOrder|shortDelay|reactiveComp|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 1A.12
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPage
                  - next_step_id: navigateToChatPage
              - id: navigateToVoucherCreatedPage
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPage
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPage
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage
              - id: navigateToCaseAlreadyCreatedPage
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPage
                type: navigation
                destination: page.navigateToChatPage
          - id: whereIsOrder|shortDelay|reactiveComp|compensation|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.12
  - id: page.navigateToVoucherCreatedPage
    title: {{ voucher_created_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|voucherCreated
        type: result
        result_type: SUCCESS
        title: {{ voucher_created_reactive_comp }}
        description: {{ voucher_created_reactive_comp_desc }}
  - id: page.navigateToCaseCreatedPage
    title: {{ case_created_title_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|success
        type: result
        result_type: SUCCESS
        title: {{ case_created_title_reactive_comp }}
        description: {{ case_created_desc_reactive_comp }}
      - id: reactiveCompensation|result|navigateToCaseInbox
        type: formV2
        namespace: navigateToCaseInbox
        submit_button_text: {{ case_created_nav_reactive_comp }}
        on_submit:
          - id: navigateToInbox
            type: navigation
            destination: inbox
  - id: page.navigateToVoucherAlreadyCreatedPage
    title: {{ voucher_already_created_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|voucherAlreadyCreated
        type: result
        result_type: ERROR
        title: {{ voucher_already_created_reactive_comp }}
        description: {{ voucher_already_created_reactive_comp_desc }}
  - id: page.navigateToCaseAlreadyCreatedPage
    title: {{ case_already_created_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|caseAlreadyCreated
        type: result
        result_type: SUCCESS
        title: {{ case_already_created_reactive_comp }}
        description: {{ case_created_desc_reactive_comp }}
      - id: reactiveCompensation|result|caseAlreadyCreated|deepLinkToCaseInbox
        type: formV2
        namespace: navigateToCaseInbox
        submit_button_text: {{ case_created_nav_reactive_comp }}
        on_submit:
          - id: navigateToInbox
            type: navigation
            destination: inbox
  - id: page.navigateToChatPage
    title: {{ navigate_to_chat_case_created }}
    blocks:
      - id: reactiveCompensation|result|chat|text
        type: result
        result_type: SUCCESS
        title: {{ navigate_to_chat_case_created }}
        description: {{ navigate_to_chat_case_created_desc }}
      - id: reactiveCompensation|result|chat|form
        type: form
        submit_text: {{ start_chat }}
        constants:
          reason_code: 1A.12
          order_id: <<order.orderId>>
          transaction_id: <<order.transactionId>>
        action: chat
  - id: complain_about_late_order.4_1
    title: {{ where_is_myorder }}
    blocks:
          - id: whereIsOrder|shortDelay|HPlus|nocompensation|chat|text
            type: richContent
            text: {{ fallback_evaluation_phase_rc }}
          - id: whereIsOrder|shortDelay|HPlus|nocompensation|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.12      
  - id: complain_about_late_order.5
    title: {{ where_is_myorder }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 1A.13
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: whereIsOrder|moderateDelay|reactiveComp|voucherAlreadyCreated|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_chat_rc }}
          - id: reactiveCompensation|result|voucherAlreadyCreated|chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.13
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: whereIsOrder|moderateDelay|reactiveComp|409|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_already_created, order_already_compensated_external]
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|409|evaluate|text
            type: richContent
            text: {{ action_already_taken_rc }}
      - id: whereIsOrder|moderateDelay|reactiveComp|noRecommendation|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_rc }}
          - id: whereIsOrder|moderateDelay|reactiveComp|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.13
      - id: whereIsOrder|moderateDelay|reactiveComp|fraudCheckBlock|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_rc }}
          - id: whereIsOrder|moderateDelay|reactiveComp|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.13
      - id: whereIsOrder|moderateDelay|reactiveComp|fraudCaseCreated|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_rc }}
      - id: whereIsOrder|moderateDelay|reactiveComp|caseCreated|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = case_created
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|caseCreated|evaluate|text
            type: richContent
            text: {{ case_created_rc }}
      - id: whereIsOrder|moderateDelay|reactiveComp|routeToChat|evaluate
        deflection_id: 1A.13
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|routeToChat|evaluate|text
            type: richContent
            text: {{ route_to_chat_rc }}
          - id: whereIsOrder|moderateDelay|reactiveComp|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.13
      - id: whereIsOrder|moderateDelay|reactiveComp|applyReq
        type: blockGroup
        deflection_id: 1A.13
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: whereIsOrder|moderateDelay|reactiveComp|compensation|text|accepted
            type: richContent
            text: {{ moderate_severe_accepted_reactiveComp }}
            meta:
              conditions:
                order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                order.original_promised_time BETWEEN 35:50
          - id: whereIsOrder|moderateDelay|reactiveComp|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 1A.13
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPage1
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPage
                  - next_step_id: navigateToChatPage
              - id: navigateToVoucherCreatedPage
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPage
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPage1
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage1
              - id: navigateToCaseAlreadyCreatedPage
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPage
                type: navigation
                destination: page.navigateToChatPage
          - id: whereIsOrder|moderateDelay|reactiveComp|compensation|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.13
  - id: page.navigateToVoucherAlreadyCreatedPage1
    title: {{ voucher_already_created_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|voucherAlreadyCreated1
        type: result
        result_type: ERROR
        title: {{ voucher_already_created_reactive_comp }}
        description: {{ voucher_already_created_reactive_comp_desc }}
      - id: reactiveCompensation|result|voucherAlreadyCreated1|chat
        type: form
        action: chat
        submit_text: {{ start_chat }}
        constants:
          reason_code: 1A.13
  - id: complain_about_late_order.6
    title: {{ where_is_myorder }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 1A.14
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: whereIsOrder|severeDelay|reactiveComp|voucherAlreadyCreated|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_chat_rc }}
          - id: reactiveCompensation|result|voucherAlreadyCreated|chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.14
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: whereIsOrder|severeDelay|reactiveComp|409|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_already_created, order_already_compensated_external]
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|409|evaluate|text
            type: richContent
            text: {{ action_already_taken_rc }}
      - id: whereIsOrder|severeDelay|reactiveComp|noRecommendation|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_rc }}
          - id: whereIsOrder|severeDelay|reactiveComp|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.14
      - id: whereIsOrder|severeDelay|reactiveComp|fraudCheckBlock|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_rc }}
          - id: whereIsOrder|severeDelay|reactiveComp|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.14
      - id: whereIsOrder|severeDelay|reactiveComp|fraudCaseCreated|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_rc }}
      - id: whereIsOrder|severeDelay|reactiveComp|caseCreated|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = case_created
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|caseCreated|evaluate|text
            type: richContent
            text: {{ case_created_rc }}
      - id: whereIsOrder|severeDelay|reactiveComp|routeToChat|evaluate
        deflection_id: 1A.14
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|routeToChat|evaluate|text
            type: richContent
            text: {{ route_to_chat_rc }}
          - id: whereIsOrder|severeDelay|reactiveComp|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.14
      - id: whereIsOrder|severeDelay|reactiveComp|applyReq
        type: blockGroup
        deflection_id: 1A.14
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: whereIsOrder|severeDelay|reactiveComp|compensation|text|accepted
            type: richContent
            text: {{ moderate_severe_accepted_reactiveComp }}
            meta:
              conditions:
                order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                order.original_promised_time BETWEEN 50:65
          - id: whereIsOrder|severeDelay|reactiveComp|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 1A.14
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPage2
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPage
                  - next_step_id: navigateToChatPage
              - id: navigateToVoucherCreatedPage
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPage
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPage2
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage2
              - id: navigateToCaseAlreadyCreatedPage
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPage
                type: navigation
                destination: page.navigateToChatPage
          - id: whereIsOrder|severeDelay|reactiveComp|compensation|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.14
  - id: page.navigateToVoucherAlreadyCreatedPage2
    title: {{ voucher_already_created_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|voucherAlreadyCreated2
        type: result
        result_type: ERROR
        title: {{ voucher_already_created_reactive_comp }}
        description: {{ voucher_already_created_reactive_comp_desc }}
      - id: reactiveCompensation|result|voucherAlreadyCreated2|chat
        type: form
        action: chat
        submit_text: {{ start_chat }}
        constants:
          reason_code: 1A.14
  - id: complain_about_late_order.7
    title: {{ where_is_myorder }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 1A.15
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: whereIsOrder|extremeDelay|reactiveComp|voucherAlreadyCreated|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_chat_rc }}
          - id: reactiveCompensation|result|voucherAlreadyCreated|chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.15
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: whereIsOrder|extremeDelay|reactiveComp|409|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_already_created, order_already_compensated_external]
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|409|evaluate|text
            type: richContent
            text: {{ action_already_taken_rc }}
      - id: whereIsOrder|extremeDelay|reactiveComp|noRecommendation|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_rc }}
          - id: whereIsOrder|extremeDelay|reactiveComp|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.15
      - id: whereIsOrder|extremeDelay|reactiveComp|fraudCheckBlock|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_rc }}
          - id: whereIsOrder|extremeDelay|reactiveComp|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.15
      - id: whereIsOrder|extremeDelay|reactiveComp|fraudCaseCreated|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_rc }}
      - id: whereIsOrder|extremeDelay|reactiveComp|caseCreated|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = case_created
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|caseCreated|evaluate|text
            type: richContent
            text: {{ case_created_rc }}
      - id: whereIsOrder|extremeDelay|reactiveComp|routeToChat|evaluate
        deflection_id: 1A.15
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|routeToChat|evaluate|text
            type: richContent
            text: {{ route_to_chat_rc }}
          - id: whereIsOrder|extremeDelay|reactiveComp|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 1A.15
      - id: whereIsOrder|extremeDelay|reactiveComp|applyReq
        type: blockGroup
        deflection_id: 1A.15
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: whereIsOrder|extremeDelay|reactiveComp|compensation|text|accepted
            type: richContent
            text: {{ moderate_severe_accepted_reactiveComp }}
            meta:
              conditions:
                order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED, PICKED_UP,
                COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                order.original_promised_time >= 65
          - id: whereIsOrder|extremeDelay|reactiveComp|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 1A.15
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPage
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPage3
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPage
                  - next_step_id: navigateToChatPage
              - id: navigateToVoucherCreatedPage
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPage
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPage3
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage3
              - id: navigateToCaseAlreadyCreatedPage
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPage
                type: navigation
                destination: page.navigateToChatPage
          - id: whereIsOrder|extremeDelay|reactiveComp|compensation|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.15
  - id: page.navigateToVoucherAlreadyCreatedPage3
    title: {{ voucher_already_created_reactive_comp }}
    blocks:
      - id: reactiveCompensation|result|voucherAlreadyCreated3
        type: result
        result_type: ERROR
        title: {{ voucher_already_created_reactive_comp }}
        description: {{ voucher_already_created_reactive_comp_desc }}
      - id: reactiveCompensation|result|voucherAlreadyCreated3|chat
        type: form
        action: chat
        submit_text: {{ start_chat }}
        constants:
          reason_code: 1A.15
  - id: cancellation.cancel_order_pickedup_late
    title: {{ want_to_cancel_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpLate
        event_id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpLate
        deflection_id: 1C
        type: blockGroup
        meta:
          conditions:
            order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
            order.original_promised_time >= 20
        blocks:
          - id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpLate|text
            type: richContent
            text: {{ rider_on_his_way_reason_to_cancel }}
          - id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpLate|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_order_pickedup_late
            fields:
              - id: orders|ordersList|orderDetail|OD|cancelMyOrder|pickedUpLate|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
  - id: cancellation.cancel_order_accepted_late
    title: {{ want_to_cancel_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|cancelMyOrder|AcceptedLate|1
        event_id: orders|ordersList|orderDetail|OD|cancelMyOrder|AcceptedLate
        deflection_id: 1C
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.original_promised_time >= 20
        blocks:
          - id: orders|ordersList|orderDetail|OD|cancelMyOrder|AcceptedLate|text
            type: richContent
            text: {{ cancel_late_order }}
          - id: orders|ordersList|orderDetail|OD|cancelMyOrder|AcceptedLate|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_order_accepted_late
            fields:
              - id: orders|ordersList|orderDetail|OD|cancelMyOrder|AcceptedLate|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
  - id: order_marked_as_delivered_but_didnt_receive.mark_as_delivered_but_not_received
    title: {{ marked_as_deleted_but_not_arrived }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|markedAsDelivered|1
        event_id: orders|ordersList|orderDetail|ODDelivered|markedAsDelivered
        type: blockGroup
        deflection_id: 1A.4
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|pinvalidated|text
            meta:
              conditions: order.delivery_pin_validated = True
            type: richContent
            text: {{ marked_as_arrived_validated_pin }}
          - id: orders|ordersList|orderDetail|ODDelivered|markedAsDelivered|text
            meta:
              conditions: order.delivery_pin_validated = False
            type: richContent
            text: {{ marked_as_deleted_but_not_arrived_detail }}
          - id: orders|ordersList|orderDetail|ODDelivered|markedAsDelivered|chat
            meta:
              conditions: order.delivery_pin_validated = False
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.4
              subject: mark_as_delivered_but_not_received
  - id: missing_item.missing_items
    title: {{ title_missing_items }}
    meta:
      before_display:
        namespace: initialChecks
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/checks/refund-initial-checks/<<order.orderId>>
          has_default_helpcenter_headers: true
          method: GET
          body:
            order_id: <<order.order_id>>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|requestAlreadyRaised
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type = already_routed_to_chat
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|refundActionCheckRequestAlreadyRaised|resultError
            type: result
            result_type: ERROR
            title: {{ request_already_raised }}
            description: {{ request_already_raised_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|refundActionCheckRequestAlreadyRaised|resultError|chat
            action: chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
      - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|walletAlreadyProcessed
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [already_added_to_wallet, voucher_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|walletAlreadyProcessed|resultError
            type: result
            result_type: ERROR
            title: {{ partial_refund_already_added_to_wallet_title }}
            description: {{ partial_refund_already_added_to_wallet_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|walletAlreadyProcessed|resultError|deepLink|wallet
            type: deepLink
            deeplink_url: hungerstation://wallet/
            deeplink_title: wallet_link
            submit_text: {{ wallet_deeplink }}
          - id: partialRefundV2|refundActionChec|wWalletAlreadyProcessed|resultError|deepLink|orderAgain
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|alreadyRefundedAutomatically
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [already_refunded_automatically,
            order_already_refunded_external]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|alreadyRefundedAutomatically|resultSuccess
            type: result
            result_type: SUCCESS
            title: {{ partial_refund_already_added_to_online_title }}
            description: {{ partial_refund_already_refunded_online_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|alreadyRefundedAutomatically|resultSuccess|deepLink
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|autoPartialRefundNotPossible
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [auto_partial_refund_not_possible,
            wallet_creation_failed, online_payment_failed]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|autoPartialRefundNotPossible|resultSuccess
            type: result
            result_type: ERROR
            title: {{ partial_refund_error_title }}
            description: {{ partial_refund_chat_fallback_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|autoPartialRefundNotPossible|resultSuccess|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|chat|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|chat|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
      - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|caseAlreadyCreated
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type = case_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|caseCreated|resultSuccess
            type: result
            result_type: SUCCESS
            title: {{ case_created_title_reactive_comp }}
            description: {{ partial_refund_case_created_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|caseCreated|resultSuccess|formV2
            type: formV2
            namespace: goToRequestInbox
            submit_button_text: {{ case_created_nav_reactive_comp }}
            on_submit:
              - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|caseCreated|resultSuccess|formV2|navigation
                type: navigation
                destination: inbox
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|caseCreated|resultSuccess|deepLink
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|notAccountedError
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status != 200 AND
            $initialChecks.response.body.type NOT IN [already_routed_to_chat, already_added_to_wallet,
            voucher_already_created, already_refunded_automatically, fin_case_already_created,
            case_already_created, auto_partial_refund_not_possible]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|notAccountedError|resultError
            type: result
            result_type: ERROR
            title: {{ partial_refund_error_title }}
            description: {{ partial_refund_chat_fallback_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|notAccountedError|resultError|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: partialRefundV2|missingItems|singleItem
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = True
        blocks:
          - id: partialRefundV2|missingItems|singleItem|text
            type: richContent
            text: {{ partial_refund_main_selection }}
          - id: partialRefundV2|missingItems|singleItem|formV2
            type: formV2
            namespace: singleItemMissingItemScale
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|singleItem|formV2|choiceGroup|missingItemScale
                type: choiceGroup
                data_key: missingItemScale
                label: {{ label_checkbox_missing_item_scale }}
                is_required: true
                blocks:
                  - id: partialRefundV2|missingItems|singleItem|formV2|choiceGroup|checkbox|10
                    type: checkbox
                    value: minor_item
                    text: {{ partial_refund_toppings }}
                  - id: partialRefundV2|missingItems|singleItem|formV2|choiceGroup|checkbox|30
                    type: checkbox
                    value: sub_item
                    text: {{ partial_refund_subitem }}
                  - id: partialRefundV2|missingItems|singleItem|formV2|choiceGroup|checkbox|50
                    type: checkbox
                    value: primary_item
                    text: {{ partial_refund_main_item }}
              - id: partialRefundV2|missingItems|singleItem|formV2|hidden|item|id|<<$index>>
                type: hidden
                value: <<item.item_id>>
                data_key: items.<<$index>>.id
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|missingItems|singleItem|formV2|hidden|item|label|<<$index>>
                type: hidden
                value: <<item.name>>
                data_key: items.<<$index>>.label
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|missingItems|singleItem|formV2|hidden|item|hcItemId|<<$index>>
                type: hidden
                value: <<item.hc_item_id>>
                data_key: items.<<$index>>.hc_item_id
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|missingItems|singleItem|formV2|hidden|item|quantity|<<$index>>
                type: hidden
                value: <<item.quantity>>
                data_key: items.<<$index>>.quantity
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|missingItems|singleItem|formV2|hidden|item|options|<<$index>>
                type: hidden
                value: <<item.options>>
                data_key: items.<<$index>>.options
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|missingItems|singleItem|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|missingItems|singleItem|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_singleItem_selectRefundMethod
                type: navigation
                destination: missing_item.pRv2_singleItem_selectRefundMethod
      - id: partialRefundV2|missingItems|MultiItemsNoOptions
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = False
        blocks:
          - id: partialRefundV2|missingItems|MultiItemsNoOptions|text
            type: richContent
            text: {{ sorry_missing_items }}
          - id: partialRefundV2|missingItems|MultiItemsNoOptions|formV2
            type: formV2
            namespace: multiItemsNoOptionsSelectedItems
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|MultiItemsNoOptions|formV2|itemQuantitySelector
                type: itemQuantitySelector
                data_key: items
                label: {{ select_the_missing_items }}
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: partialRefundV2|missingItems|MultiItemsNoOptions|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|missingItems|MultiItemsNoOptions|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsNoOptions_selectRefundMethod
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_selectRefundMethod
      - id: partialRefundV2|missingItems|multiItemsOptionsPrice
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = True
        blocks:
          - id: partialRefundV2|missingItems|multiItemsOptionsPrice|text
            type: richContent
            text: {{ sorry_missing_items }}
          - id: partialRefundV2|missingItems|multiItemsOptionsPrice|formV2
            type: formV2
            namespace: multiItemsOptionsPriceSelectedItems
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|multiItemsOptionsPrice|formV2|itemQuantitySelector
                type: itemQuantitySelector
                data_key: items
                label: {{ select_the_missing_items }}
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: partialRefundV2|missingItems|multiItemsOptionsPrice|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|missingItems|multiItemsOptionsPrice|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsOptionsPrice_selectRefundMethod
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_selectRefundMethod
      - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|combo|noOptionsPrice
        deflection_id: 2A.1
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = False
        blocks:
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|text
            type: richContent
            text: {{ partial_refund_main_selection }}
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2
            type: formV2
            namespace: multiItemsOptionsNoPriceMissingItemScale
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2|choiceGroup
                type: choiceGroup
                data_key: missingItemScale
                label: {{ label_checkbox_missing_item_scale }}
                is_required: true
                blocks:
                  - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2|choiceGroup|checkbox|10
                    type: checkbox
                    value: minor_item
                    text: {{ partial_refund_toppings }}
                  - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2|choiceGroup|checkbox|30
                    type: checkbox
                    value: sub_item
                    text: {{ partial_refund_subitem }}
                  - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2|choiceGroup|checkbox|50
                    type: checkbox
                    value: primary_item
                    text: {{ partial_refund_main_item }}
              - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_selectItems
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_selectItems
  - id: missing_item.pRv2_multiItemsOptionsNoPrice_selectItems
    title: {{ title_multiItemsOptionsNoPrice_partial_refund_v2 }}
    blocks:
      - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|text
        type: richContent
        text: {{ sorry_missing_items }}
      - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2
        type: formV2
        namespace: multiItemsOptionsNoPriceSelectedItems
        submit_button_text: {{ partial_refund_v2_nav_next_button }}
        fields:
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2|itemQuantitySelector
            type: itemQuantitySelector
            data_key: items
            label: {{ select_the_missing_items }}
            is_required: true
            meta:
              is_zero_priced_order_item_options_displayed: true
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|image
            type: imageUploader
            is_required: true
            data_key: image    
        on_submit:
          - id: navigateTo_pRv2_multiItemsOptionsNoPrice_selectRefundMethod
            type: navigation
            destination: missing_item.pRv2_multiItemsOptionsNoPrice_selectRefundMethod
  - id: missing_item.pRv2_singleItem_selectRefundMethod
    title: {{ title_multiItemsOptionsNoPrice_refund_method }}
    blocks:
      - id: partialRefundV2|missingItems|singleItem|selectRefundMethod
        deflection_id: 2A.1
        type: blockGroup
        blocks:
          - id: partialRefundV2|missingItems|singleItem|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|missingItems|singleItem|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|singleItem|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|missingItems|singleItem|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|missingItems|singleItem|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: singleItemApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    missing_item_scale: <<$singleItemMissingItemScale.fieldValues.missingItemScale>>
                    items: <<$singleItemMissingItemScale.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.1
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.session_id >>
                    description: <<$singleItemMissingItemScale.fieldValues.description>>
                    image_url: <<$singleItemMissingItemScale.fieldValues.image>>
                next_step_id: singleItemApplyDecision
              - id: singleItemApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.singleItemApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_singleItem_voucherCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_singleItem_addedToWallet
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_singleItem_voucherCreated
                type: navigation
                destination: missing_item.pRv2_singleItem_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_singleItem_addedToWallet
                type: navigation
                destination: missing_item.pRv2_singleItem_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: missing_item.pRv2_multiItemsNoOptions_selectRefundMethod
    title: {{ title_multiItemsNoOptions_refund_method }}
    blocks:
      - id: partialRefundV2|missingItems|multiItemsNoOptions|selectRefundMethod
        deflection_id: 2A.1
        type: blockGroup
        blocks:
          - id: partialRefundV2|missingItems|multiItemsNoOptions|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|missingItems|multiItemsNoOptions|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|missingItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|missingItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsNoOptionsApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    items: <<$multiItemsNoOptionsSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.1
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsNoOptionsSelectedItems.fieldValues.description>>
                    image_url: <<$multiItemsNoOptionsSelectedItems.fieldValues.image>>
                next_step_id: multiItemsNoOptionsApplyDecision
              - id: multiItemsNoOptionsApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsNoOptions_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsNoOptions_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsNoOptions_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsNoOptions_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: missing_item.pRv2_multiItemsOptionsPrice_selectRefundMethod
    title: {{ title_multiItemsOptionsPrice_refund_method }}
    blocks:
      - id: partialRefundV2|missingItems|multiItemsOptionsPrice|selectRefundMethod
        deflection_id: 2A.1
        type: blockGroup
        blocks:
          - id: partialRefundV2|missingItems|multiItemsOptionsPrice|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|missingItems|multiItemsOptionsPrice|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|missingItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|missingItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsOptionsPriceApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    items: <<$multiItemsOptionsPriceSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.1
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsOptionsPriceSelectedItems.fieldValues.description>>
                    image_url: <<$multiItemsOptionsPriceSelectedItems.fieldValues.image>>
                next_step_id: multiItemsOptionsPriceApplyDecision
              - id: multiItemsOptionsPriceApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsOptionsPrice_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsOptionsPrice_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsOptionsPrice_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsOptionsPrice_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: missing_item.pRv2_multiItemsOptionsNoPrice_selectRefundMethod
    title: {{ title_multiItemsOptionsNoPrice_refund_method }}
    blocks:
      - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|selectRefundMethod
        deflection_id: 2A.1
        type: blockGroup
        blocks:
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsOptionsNoPriceApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    missing_item_scale: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.missingItemScale>>
                    items: <<$multiItemsOptionsNoPriceSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.1
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.description>>
                    image_url: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.image>>
                next_step_id: multiItemsOptionsNoPriceApplyDecision
              - id: multiItemsOptionsNoPriceApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsOptionsNoPrice_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsOptionsNoPrice_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: missing_item.pRv2_voucherAlreadyCreated
    title: {{ partial_refund_voucher_already_created }}
    blocks:
      - id: partialRefundResult|voucherAlreadyCreated
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_wallet_title }}
        description: {{ partial_refund_already_added_to_wallet_description }}
      - id: partialRefundResult|deepLinkToVoucherInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_alreadyAddedToWallet
    title: {{ partial_refund_wallet_already_created }}
    blocks:
      - id: partialRefundResult|alreadyAddedToWallet
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_wallet_title }}
        description: {{ partial_refund_already_added_to_wallet_description }}
      - id: partialRefundResult|deepLinkToWalletInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_alreadyRefundedAutomatically
    title: {{ partial_refund_online_already_created }}
    blocks:
      - id: partialRefundResult|alreadyRefundedExternal
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_online_title }}
        description: {{ partial_refund_already_refunded_online_description }}
  - id: missing_item.pRv2_orderAlreadyRefundedExternal
    title: {{ partial_refund_external_already_created }}
    blocks:
      - id: partialRefundResult|alreadyRefundedExternal
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_online_title }}
        description: {{ partial_refund_already_refunded_online_description }}
  - id: missing_item.pRv2_caseAlreadyCreated
    title: {{ partial_refund_case_alreasdy_created }}
    blocks:
      - id: partialRefundResult|caseCreated
        type: result
        result_type: SUCCESS
        title: {{ case_created_title_reactive_comp }}
        description: {{ partial_refund_case_created_description }}
      - id: partialRefundResult|navigateToCaseInbox
        type: formV2
        namespace: partialRefundInboxNavigationTwo
        submit_button_text: {{ case_created_nav_reactive_comp }}
        on_submit:
          - id: navigateToInbox
            type: navigation
            destination: inbox
  - id: missing_item.pRv2_caseCreated
    title: {{ aprtial_refund_case_created }}
    blocks:
      - id: partialRefundResult|caseCreated
        type: result
        result_type: SUCCESS
        title: {{ case_created_title_reactive_comp }}
        description: {{ partial_refund_case_created_description }}
      - id: partialRefundResult|navigateToCaseInbox
        type: formV2
        namespace: partialRefundInboxNavigationOne
        submit_button_text: {{ case_created_nav_reactive_comp }}
        on_submit:
          - id: navigateToInbox
            type: navigation
            destination: inbox
  - id: missing_item.pRv2_deflection
    title: {{ partial_refund_request_denied }}
    blocks:
      - id: partialRefundResult|noFallback
        type: result
        result_type: ERROR
        title: {{ partial_refund_error_title }}
        description: {{ partial_refund_chat_fallback_description }}
      - id: partialRefundResultdeflection|chat
        type: form
        submit_text: {{ start_chat }}
        constants:
          reason_code: 2A.1
          order_id: <<order.orderId>>
          transaction_id: <<order.transactionId>>
        action: chat
        fields:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|chat|text
            type: textArea
            label: {{ explain_the_issue }}
            data_key: description
  - id: missing_item.pRv2_singleItem_voucherCreated
    title: {{ partial_refund_voucher_created_title }}
    blocks:
      - id: partialRefundResult|success|voucherCreated
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_voucher_title }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToVoucherInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_multiItemsNoOptions_voucherCreated
    title: {{ voucher_created_reactive_comp }}
    blocks:
      - id: partialRefundResult|success|voucherCreated
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_voucher_title_multinooption }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToVoucherInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_multiItemsOptionsPrice_voucherCreated
    title: {{ partial_refund_voucher_created_title }}
    blocks:
      - id: partialRefundResult|success|voucherCreated
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_voucher_title_multiwithprice }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToVoucherInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_multiItemsOptionsNoPrice_voucherCreated
    title: {{ partial_refund_voucher_created_title }}
    blocks:
      - id: partialRefundResult|success|voucherCreated
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_voucher_title_multinoprice }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToVoucherInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_singleItem_addedToWallet
    title: {{ voucher_created_reactive_comp }}
    blocks:
      - id: partialRefundResult|success|addedToWallet
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_wallet_title }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToWalletInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_multiItemsNoOptions_addedToWallet
    title: {{ voucher_created_reactive_comp }}
    blocks:
      - id: partialRefundResult|success|addedToWallet
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_wallet_title_multinooption }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToWalletInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_multiItemsOptionsPrice_addedToWallet
    title: {{ voucher_created_reactive_comp }}
    blocks:
      - id: partialRefundResult|success|addedToWallet
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_wallet_title_multiwithprice }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToWalletInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_multiItemsOptionsNoPrice_addedToWallet
    title: {{ voucher_created_reactive_comp }}
    blocks:
      - id: partialRefundResult|success|addedToWallet
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_wallet_title_multinoprice }}
        description: {{ partial_refund_credit_added_description }}
      - id: partialRefundResult|deepLinkToWalletInfo
        type: deepLink
        deeplink_url: hungerstation://wallet/
        deeplink_title: wallet_link
        submit_text: {{ wallet_deeplink }}
  - id: missing_item.pRv2_refundedAutomatically
    title: {{ partial_refund_voucher_refunded_auto_title }}
    blocks:
      - id: partialRefundResult|refundedExternal
        type: result
        result_type: SUCCESS
        title: {{ partial_refund_already_added_to_wallet_title }}
        description: {{ partial_refund_online_added_description }}
  - id: missing_item.pRv2_chat
    title: {{ partial_refund_chat_title }}
    blocks:
      - id: partialRefundResult|chat|title
        type: richContent
        text: {{ chat_with_an_agent }}
      - id: partialRefundResult|chat|description
        type: richContent
        text: {{ wrong_missing_items_courier_body }}
      - id: partialRefundResult|chat|singleItem|blockGroup
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.body.type IN [initial_checks_response] AND
            $initialChecks.response.body.payload.isSingleItem = True
        blocks:
          - id: partialRefundResult|chat|singleItem|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              missing_item_scale: << $singleItemMissingItemScale.fieldValues.missingItemScale
                >>
              refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
              order_id: <<order.order_id>>
              transaction_id: <<order.transaction_id>>
              helpcenter_session_id: << analytics.sessionId>>
            action: chat
      - id: partialRefundResult|chat|multiItemsNoOptions|blockGroup
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.body.type = initial_checks_response AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = False
        blocks:
          - id: partialRefundResult|chat|multiItemsNoOptions|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              items: << $multiItemsNoOptionsSelectedItems.fieldValues.items >>
              refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
              order_id: <<order.order_id>>
              transaction_id: <<order.transaction_id>>
              helpcenter_session_id: << analytics.sessionId>>
            action: chat
      - id: partialRefundResult|chat|multiItemsOptionsPrice|blockGroup
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.body.type = initial_checks_response AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = True
        blocks:
          - id: partialRefundResult|chat|multiItemsOptionsPrice|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              items: <<$multiItemsOptionsPriceSelectedItems.fieldValues.items>>
              refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
              order_id: <<order.order_id>>
              transaction_id: <<order.transaction_id>>
              helpcenter_session_id: << analytics.sessionId>>
            action: chat
      - id: partialRefundResult|chat|multiItemsOptionsNoPrice|blockGroup
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.body.type = initial_checks_response AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = False
        blocks:
          - id: partialRefundResult|chat|multiItemsOptionsNoPrice|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              missing_item_scale: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.missingItemScale>>
              items: <<$multiItemsOptionsNoPriceSelectedItems.fieldValues.items>>
              refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
              order_id: <<order.order_id>>
              transaction_id: <<order.transaction_id>>
              helpcenter_session_id: << analytics.sessionId>>
            action: chat
  - id: wrong_item.wrong_items
    title: {{ wrong_items_delivered_title }}
    meta:
      before_display:
        namespace: initialChecks
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/checks/refund-initial-checks/<<order.orderId>>
          has_default_helpcenter_headers: true
          method: GET
          body:
            order_id: <<order.order_id>>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|requestAlreadyRaised
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type = already_routed_to_chat
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|refundActionCheckRequestAlreadyRaised|resultError
            type: result
            result_type: ERROR
            title: {{ request_already_raised }}
            description: {{ request_already_raised_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|refundActionCheckRequestAlreadyRaised|resultError|chat
            action: chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.2
      - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|walletAlreadyProcessed
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [already_added_to_wallet, voucher_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|walletAlreadyProcessed|resultError
            type: result
            result_type: ERROR
            title: {{ partial_refund_already_added_to_wallet_title }}
            description: {{ partial_refund_already_added_to_wallet_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|walletAlreadyProcessed|resultError|deepLink|wallet
            type: deepLink
            deeplink_url: hungerstation://wallet/
            deeplink_title: wallet_link
            submit_text: {{ wallet_deeplink }}
          - id: partialRefundV2|refundActionChec|wWalletAlreadyProcessed|resultError|deepLink|orderAgain
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|alreadyRefundedAutomatically
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [already_refunded_automatically,
            order_already_refunded_external]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|alreadyRefundedAutomatically|resultSuccess
            type: result
            result_type: SUCCESS
            title: {{ partial_refund_already_added_to_online_title }}
            description: {{ partial_refund_already_refunded_online_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|alreadyRefundedAutomatically|resultSuccess|deepLink
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|autoPartialRefundNotPossible
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [auto_partial_refund_not_possible,
            wallet_creation_failed, online_payment_failed]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|autoPartialRefundNotPossible|resultSuccess
            type: result
            result_type: ERROR
            title: {{ partial_refund_error_title }}
            description: {{ partial_refund_chat_fallback_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|autoPartialRefundNotPossible|resultSuccess|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.2
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|missingItems|old|chat|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
      - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|caseAlreadyCreated
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type = case_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|caseCreated|resultSuccess
            type: result
            result_type: SUCCESS
            title: {{ case_created_title_reactive_comp }}
            description: {{ partial_refund_case_created_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|caseCreated|resultSuccess|formV2
            type: formV2
            namespace: goToRequestInbox
            submit_button_text: {{ case_created_nav_reactive_comp }}
            on_submit:
              - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|caseCreated|resultSuccess|formV2|navigation
                type: navigation
                destination: inbox
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|caseCreated|resultSuccess|deepLink
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|notAccountedError
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status != 200 AND
            $initialChecks.response.body.type NOT IN [already_routed_to_chat, already_added_to_wallet,
            voucher_already_created, already_refunded_automatically, fin_case_already_created,
            case_already_created, auto_partial_refund_not_possible]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|notAccountedError|resultError
            type: result
            result_type: ERROR
            title: {{ partial_refund_error_title }}
            description: {{ partial_refund_chat_fallback_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|wrongItems|wrongItems|wrongItems|notAccountedError|resultError|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.2
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: partialRefundV2|wrongItems|singleItem
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = True
        blocks:
          - id: partialRefundV2|wrongItems|singleItem|text
            type: richContent
            text: {{ partial_refund_main_selection }}
          - id: partialRefundV2|wrongItems|singleItem|formV2
            type: formV2
            namespace: singleItemMissingItemScale
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|singleItem|formV2|choiceGroup|missingItemScale
                type: choiceGroup
                data_key: missingItemScale
                label: {{ label_checkbox_missing_item_scale }}
                is_required: true
                blocks:
                  - id: partialRefundV2|wrongItems|singleItem|formV2|choiceGroup|checkbox|10
                    type: checkbox
                    value: minor_item
                    text: {{ partial_refund_toppings_wrong }}
                  - id: partialRefundV2|wrongItems|singleItem|formV2|choiceGroup|checkbox|30
                    type: checkbox
                    value: sub_item
                    text: {{ partial_refund_subitem_wrong }}
                  - id: partialRefundV2|wrongItems|singleItem|formV2|choiceGroup|checkbox|50
                    type: checkbox
                    value: primary_item
                    text: {{ partial_refund_main_item_wrong }}
              - id: partialRefundV2|wrongItems|singleItem|formV2|hidden|item|id|<<$index>>
                type: hidden
                value: <<item.item_id>>
                data_key: items.<<$index>>.id
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|wrongItems|singleItem|formV2|hidden|item|label|<<$index>>
                type: hidden
                value: <<item.name>>
                data_key: items.<<$index>>.label
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|wrongItems|singleItem|formV2|hidden|item|hcItemId|<<$index>>
                type: hidden
                value: <<item.hc_item_id>>
                data_key: items.<<$index>>.hc_item_id
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|wrongItems|singleItem|formV2|hidden|item|quantity|<<$index>>
                type: hidden
                value: <<item.quantity>>
                data_key: items.<<$index>>.quantity
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|wrongItems|singleItem|formV2|hidden|item|options|<<$index>>
                type: hidden
                value: <<item.options>>
                data_key: items.<<$index>>.options
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|wrongItems|singleItem|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|wrongItems|singleItem|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_singleItem_selectRefundMethod
                type: navigation
                destination: wrong_item.pRv2_singleItem_selectRefundMethod
      - id: partialRefundV2|wrongItems|MultiItemsNoOptions
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = False
        blocks:
          - id: partialRefundV2|wrongItems|MultiItemsNoOptions|text
            type: richContent
            text: {{ sorry_wrong_items_od }}
          - id: partialRefundV2|wrongItems|MultiItemsNoOptions|formV2
            type: formV2
            namespace: multiItemsNoOptionsSelectedItems
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|MultiItemsNoOptions|formV2|itemQuantitySelector
                type: itemQuantitySelector
                data_key: items
                label: {{ select_the_missing_items }}
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: partialRefundV2|wrongItems|MultiItemsNoOptions|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|wrongItems|MultiItemsNoOptions|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsNoOptions_selectRefundMethod
                type: navigation
                destination: wrong_item.pRv2_multiItemsNoOptions_selectRefundMethod
      - id: partialRefundV2|wrongItems|multiItemsOptionsPrice
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = True
        blocks:
          - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|text
            type: richContent
            text: {{ sorry_wrong_items_od }}
          - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|formV2
            type: formV2
            namespace: multiItemsOptionsPriceSelectedItems
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|formV2|itemQuantitySelector
                type: itemQuantitySelector
                data_key: items
                label: {{ select_the_missing_items }}
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsOptionsPrice_selectRefundMethod
                type: navigation
                destination: wrong_item.pRv2_multiItemsOptionsPrice_selectRefundMethod
      - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = False
        blocks:
          - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|text
            type: richContent
            text: {{ partial_refund_main_selection }}
          - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2
            type: formV2
            namespace: multiItemsOptionsNoPriceMissingItemScale
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup
                type: choiceGroup
                data_key: missingItemScale
                label: {{ label_checkbox_missing_item_scale }}
                is_required: true
                blocks:
                  - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup|checkbox|10
                    type: checkbox
                    value: minor_item
                    text: {{ partial_refund_toppings_wrong }}
                  - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup|checkbox|30
                    type: checkbox
                    value: sub_item
                    text: {{ partial_refund_subitem_wrong }}
                  - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup|checkbox|50
                    type: checkbox
                    value: primary_item
                    text: {{ partial_refund_main_item_wrong }}
              - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_selectItems
                type: navigation
                destination: wrong_item.pRv2_multiItemsOptionsNoPrice_selectItems
  - id: wrong_item.pRv2_multiItemsOptionsNoPrice_selectItems
    title: {{ title_multiItemsOptionsNoPrice_partial_refund_wrong }}
    blocks:
      - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|text
        type: richContent
        text: {{ sorry_wrong_items_od }}
      - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2
        type: formV2
        namespace: multiItemsOptionsNoPriceSelectedItems
        submit_button_text: {{ partial_refund_v2_nav_next_button }}
        fields:
          - id: partialRefundV2|missingItems|multiItemsOptionsNoPrice|formV2|itemQuantitySelector
            type: itemQuantitySelector
            data_key: items
            label: {{ select_the_missing_items }}
            is_required: true
            meta:
              is_zero_priced_order_item_options_displayed: true
        on_submit:
          - id: navigateTo_pRv2_multiItemsOptionsNoPrice_selectRefundMethod
            type: navigation
            destination: wrong_item.pRv2_multiItemsOptionsNoPrice_selectRefundMethod
  - id: wrong_item.pRv2_singleItem_selectRefundMethod
    title: {{ refund_method }}
    blocks:
      - id: partialRefundV2|wrongItems|singleItem|selectRefundMethod
        deflection_id: 2A.2
        type: blockGroup
        blocks:
          - id: partialRefundV2|wrongItems|singleItem|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|wrongItems|singleItem|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|singleItem|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|wrongItems|singleItem|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|wrongItems|singleItem|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: singleItemApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    missing_item_scale: <<$singleItemMissingItemScale.fieldValues.missingItemScale>>
                    items: <<$singleItemMissingItemScale.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.session_id >>
                    description: <<$singleItemMissingItemScale.fieldValues.description>>
                    image_url: <<$singleItemMissingItemScale.fieldValues.image>>
                next_step_id: singleItemApplyDecision
              - id: singleItemApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.singleItemApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_singleItem_voucherCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_singleItem_addedToWallet
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_singleItem_voucherCreated
                type: navigation
                destination: missing_item.pRv2_singleItem_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_singleItem_addedToWallet
                type: navigation
                destination: missing_item.pRv2_singleItem_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: wrong_item.pRv2_multiItemsNoOptions_selectRefundMethod
    title: {{ title_multiItemsNoOptions_refund_method }}
    blocks:
      - id: partialRefundV2|wrongItems|multiItemsNoOptions|selectRefundMethod
        deflection_id: 2A.2
        type: blockGroup
        blocks:
          - id: partialRefundV2|wrongItems|multiItemsNoOptions|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|wrongItems|multiItemsNoOptions|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|wrongItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|wrongItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsNoOptionsApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    items: <<$multiItemsNoOptionsSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsNoOptionsSelectedItems.fieldValues.description>>
                    image_url: <<$multiItemsNoOptionsSelectedItems.fieldValues.image>>
                next_step_id: multiItemsNoOptionsApplyDecision
              - id: multiItemsNoOptionsApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsNoOptions_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsNoOptions_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsNoOptions_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsNoOptions_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: wrong_item.pRv2_multiItemsOptionsPrice_selectRefundMethod
    title: {{ title_multiItemsOptionsPrice_refund_method }}
    blocks:
      - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|selectRefundMethod
        deflection_id: 2A.2
        type: blockGroup
        blocks:
          - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|wrongItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsOptionsPriceApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    items: <<$multiItemsOptionsPriceSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsOptionsPriceSelectedItems.fieldValues.description>>
                    image_url: <<$multiItemsOptionsPriceSelectedItems.fieldValues.image>>
                next_step_id: multiItemsOptionsPriceApplyDecision
              - id: multiItemsOptionsPriceApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsOptionsPrice_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsOptionsPrice_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsOptionsPrice_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsOptionsPrice_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: wrong_item.pRv2_multiItemsOptionsNoPrice_selectRefundMethod
    title: {{ title_multiItemsOptionsNoPrice_refund_method }}
    blocks:
      - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|selectRefundMethod
        deflection_id: 2A.2
        type: blockGroup
        blocks:
          - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|wrongItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsOptionsNoPriceApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    missing_item_scale: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.missingItemScale>>
                    items: <<$multiItemsOptionsNoPriceSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2A.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.description>>
                    image_url: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.image>>
                next_step_id: multiItemsOptionsNoPriceApplyDecision
              - id: multiItemsOptionsNoPriceApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsOptionsNoPrice_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsOptionsNoPrice_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: page.5
    title: {{ food_issue_delivered }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|1
        deflection_id: 2C
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|foodIssue
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|restaurant
            type: link
            text: {{ food_damaged_or_spilled }}
            destination: damaged_item.2
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture
            type: link
            text: {{ food_tempreture_text }}
            meta:
              conditions: order.vertical_type = restaurants
            destination: food_temperature.bad_quality_food
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|FoodQuality
            type: link
            text: {{ food_didnt_met_expectations }}
            meta:
              conditions: order.vertical_type = restaurants
            destination: food_quality.bad_quality_food
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed
            type: link
            text: {{ instructions_not_followed }}
            meta:
              conditions: order.vertical_type = restaurants
            destination: cooking_instructions_were_not_followed.instructions_not_followed
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|expired
            type: link
            text: {{ button_food_expired }}
            meta:
              conditions: order.vertical_type NOT IN [restaurants, party_supplies, stationery,
                charity, optics, home_and_gifts, games, electronics, beauty, flowers, health_and_wellness]
            destination: expired_item.i_received_an_item_that_has_expired
  - id: wrong_order.received_wrong_order_refund
    title: {{ wrong_order_received }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder|1
        event_id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder
        deflection_id: 2B.1
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder|text
            type: richContent
            text: {{ sorry_didnt_met_your_expectations_wrong_order_ }}
          - id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2B.1
              subject: received_wrong_order_refund
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder|image
                type: imageUploader
                is_required: true
                data_key: image_url
              - id: orders|ordersList|orderDetail|ODDelivered|receivedWrongOrder|message
                type: textArea
                label: {{ enter_your_message }}
                data_key: description
                is_required: true
  - id: page.6
    title: {{ i_have_a_question_about_payment_or_refund }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|text
            type: richContent
            text: {{ what_payment_or_refund_do_you_have }}
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged
            type: link
            text: {{ i_ve_been_overcharged }}
            destination: incorrect_invoice.customer_overcharged
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|didntReceiveInvoice
            type: link
            text: {{ didnt_receive_invoice }}
            destination: invoice_missing.didnt_receive_invoice
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|myVoucherDidntApplied
            type: link
            text: {{ my_voucher_was_not_applied }}
            destination: other_voucher_inquiry.my_voucher_didnt_applied
          - id: payment|anotherPaymentIssue
            type: link
            text: {{ have_another_payment_issue }}
            destination: payment_issue.another_payment_issue
  - id: rider_issue.rider_feedback
    title: {{ give_feedback_to_rider }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|riderFeedback
        deflection_id: 2E
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|text
            text: {{ report_an_issue_about_rider }}
            type: richContent
          - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2E
              subject: rider_feedback_issue
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|case|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                choices:
                  - value: 2E.1
                    text: {{ behaviour }}
                  - value: 2E.2
                    text: {{ missing_equipment }}
                  - value: 2E.3
                    text: {{ order_not_delivered_to_doorstep }}
                  - value: 2E.1
                    text: {{ rider_cant_find_my_location }}
                  - value: 2E.5
                    text: {{ delivery_instructions_not_followed }}
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|case|message
                type: textInput
                label: {{ explian_the_issue_to_us }}
                data_key: rider_feedback_message
                is_required: true
  - id: rider_issue.rider_feedback1
    title: {{ give_feedback_to_rider }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|2
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|riderFeedback
        deflection_id: 2E
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|text
            text: {{ report_an_issue_about_rider }}
            type: richContent
          - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2E
              subject: rider_feedback_issue
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|case|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                choices:
                  - value: 2E.1
                    text: {{ behaviour }}
                  - value: 2E.2
                    text: {{ missing_equipment }}
                  - value: 2E.4
                    text: {{ cash_change_issue }}
                  - value: 2E.3
                    text: {{ order_not_delivered_to_doorstep }}
                  - value: 2E.1
                    text: {{ rider_cant_find_my_location }}
                  - value: 2E.5
                    text: {{ delivery_instructions_not_followed }}
              - id: orders|ordersList|orderDetail|ODDelivered|riderFeedback|case|message
                type: textInput
                label: {{ explian_the_issue_to_us }}
                data_key: rider_feedback_message
                is_required: true
  - id: delivery_time.not_arrived_on_time
    title: {{ not_arrived_on_time }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 2D.1
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|evaluate
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_postorder }}
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|409|compensatedexternal
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = order_already_compensated_external
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|409|compensatedexternal|text
            type: richContent
            text: {{ postorder_alerady_compensated_external }}
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|noRecommendation|evaluate
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_postorder_rc }}
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2D.1
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|fraudCheckBlock|evaluate
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_rc }}
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2D.1
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|fraudCaseCreated|evaluate
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_rc }}
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|caseCreated|evaluate
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_created, case_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|caseCreated|evaluate|text
            type: richContent
            text: {{ case_created_rc }}
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|routeToChat|evaluate
        deflection_id: 2D.1
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|routeToChat|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_rc }}
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2D.1
      - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|applyReq
        type: blockGroup
        deflection_id: 2D.1
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|compensation|text|accepted
            type: richContent
            text: {{ reactive_comp_proposition_body }}
          - id: orders|ordersList|orderDetail|ODDelivered|notArrivedOnTime|delay|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 2D.1
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPagePOST
                  - next_step_id: navigateToChatPagePOST
              - id: navigateToVoucherCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage
              - id: navigateToCaseAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPagePOST
                type: navigation
                destination: page.navigateToChatPage
  - id: information_request.something_else_question
    title: {{ information_request_title }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDeliveredLate|somethingElse
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDeliveredLate|somethingElse
        deflection_id: 3E
        blocks:
          - id: orders|ordersList|orderDetail|ODDeliveredLate|somethingElse|text
            type: richContent
            text: {{ we_are_happy_to_help_share_your_question }}
          - id: orders|ordersList|orderDetail|ODDeliveredLate|somethingElse|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 3E.1
              subject: something_else_question
            fields:
              - id: orders|ordersList|orderDetail|ODDeliveredLate|somethingElse|case|text
                type: textArea
                placeholder: {{ please_write_the_details }}
                label: {{ write_message_below_and_so_we_can_get_back }}
                data_key: description
                is_required: true
  - id: complain_about_late_order.2
    title: {{ where_is_myorder }}
    blocks:
      - id: orders|ordersList|orderDetail|VD|whereIsOrder|pendingTransmitted
        event_id: orders|ordersList|orderDetail|VD|whereIsOrder|pendingTransmitted
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions: order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
        blocks:
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|pendingTransmitted|text
            type: richContent
            text: {{ received_your_order_VD }}
      - id: orders|ordersList|orderDetail|VD|whereIsOrder|accepted
        event_id: orders|ordersList|orderDetail|VD|whereIsOrder|accepted
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.original_promised_time < 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|accepted|text
            type: richContent
            text: {{ restaurant_preparing_your_meal_vd }}
      - id: orders|ordersList|orderDetail|VD|whereIsOrder|acceptedDelayed
        event_id: orders|ordersList|orderDetail|VD|whereIsOrder|acceptedDelayed
        deflection_id: 1A.2
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.original_promised_time >= 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|acceptedDelayed|text
            type: richContent
            text: {{ restaurant_riders_on_their_way }}
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|acceptedDelayed|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.2
              subject: my_order_is_accepted_but_late
      - id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedUp
        event_id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedup
        deflection_id: 1A.1
        type: blockGroup
        meta:
          conditions:
            order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
            order.original_promised_time < 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedUp|text
            type: richContent
            text: {{ order_sent_for_delivery }}
      - id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedUpDelayed
        event_id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedUpDelayed
        deflection_id: 1A.2
        type: blockGroup
        meta:
          conditions:
            order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
            order.original_promised_time >= 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedUpDelayed|text
            type: richContent
            text: {{ order_sent_for_delivery_post_eta }}
          - id: orders|ordersList|orderDetail|VD|whereIsOrder|pickedUpDelayed|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.2
              subject: my_order_is_picked_up_but_late
  - id: change_order_details.1
    title: {{ customer_address_issues }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|changeOrder
        event_id: orders|ordersList|orderDetail|OD|changeOrder
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|changeAddress
            type: link
            text: {{ change_address_in_my_order }}
            meta:
              conditions:
                order.status IN [PENDING, TRANSMITTED, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR,
                ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
                order.delivery_type = platform_delivery
            destination: change_address.change_delivery_address
          - id: orders|ordersList|orderDetail|OD|changeOrder|WrongAddress
            type: link
            meta:
              conditions:
                order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
                order.delivery_type = platform_delivery
            text: {{ rider_cant_find_my_location }}
            destination: change_address.rider_cant_find_location
  - id: change_order_details.2
    title: {{ want_to_change_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|VD|changeOrder|1
        event_id: orders|ordersList|orderDetail|VD|changeOrder
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems
            type: link
            text: {{ change_item_in_my_order }}
            destination: change_food_items.change_items
          - id: orders|ordersList|orderDetail|VD|changeOrder|addVoucher
            type: link
            text: {{ add_voucher_to_my_order }}
            destination: change_voucher.1
          - id: orders|ordersList|orderDetail|VD|changeOrder|addInstructions
            type: link
            text: {{ add_food_instructions }}
            destination: change_cooking_instructions.1
          - id: orders|ordersList|orderDetail|VD|changeOrder|changePaymentMethod
            type: link
            text: {{ change_payment_method }}
            destination: change_payment_method.1
  - id: cancellation.1
    title: {{ want_to_cancel_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|VD|cancelMyOrder|notAccepted
        event_id: orders|ordersList|orderDetail|VD|cancelMyOrder|notAccepted
        deflection_id: 1C
        type: blockGroup
        meta:
          conditions:
            order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
            AND
            order.original_promised_time < 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|notAccepted|text
            type: richContent
            text: {{ choose_a_reason_to_cancel }}
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|notAccepted|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_order_not_accepted
            fields:
              - id: orders|ordersList|orderDetail|VD|cancelMyOrder|notAccepted|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
      - id: orders|ordersList|orderDetail|VD|cancelMyOrder|Accepted
        event_id: orders|ordersList|orderDetail|VD|cancelMyOrder|Accepted
        deflection_id: 1C
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.original_promised_time < 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|Accepted|text
            type: richContent
            text: {{ cancel_order_not_possible_accepted }}
      - id: orders|ordersList|orderDetail|VD|cancelMyOrder|pickedUp
        event_id: orders|ordersList|orderDetail|VD|cancelMyOrder|pickedUp
        deflection_id: 1C
        type: blockGroup
        meta:
          conditions:
            order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF] AND
            order.original_promised_time < 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|pickedUp|text
            type: richContent
            text: {{ cancel_order_not_possible_picked_vd }}
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|pickedUp|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_order_not_accepted
            fields:
              - id: orders|ordersList|orderDetail|VD|cancelMyOrder|pickedUp|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
      - id: orders|ordersList|orderDetail|VD|cancelMyOrder|late
        event_id: orders|ordersList|orderDetail|VD|cancelMyOrder|late
        deflection_id: 1C
        type: blockGroup
        meta:
          conditions:
            order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, ACCEPTED, COURIER_NEAR_PICK_UP,
            ORDER_PREPARED, PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF, WAITING_FOR_VALIDATION]
            AND
            order.original_promised_time >= 20
        blocks:
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|late|text
            type: richContent
            text: {{ cancel_late_order_vd }}
          - id: orders|ordersList|orderDetail|VD|cancelMyOrder|late|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_order_not_accepted
            fields:
              - id: orders|ordersList|orderDetail|VD|cancelMyOrder|late|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
  - id: order_marked_as_delivered_but_didnt_receive.marked_as_deleted_but_not_arrived
    title: {{ my_order_isnt_delivered_yet_text }}
    blocks:
      - id: liveOrder|orderDetail|VDDelivered|isntDeliveredYet|1
        type: blockGroup
        event_id: liveOrder|orderDetail|VDDelivered|isntDeliveredYet
        deflection_id: 1A.4
        blocks:
          - id: liveOrder|orderDetail|VDDelivered|isntDeliveredYet|text
            type: richContent
            text: {{ my_order_isnt_delivered_yet_body }}
          - id: liveOrder|orderDetail|VDDelivered|isntDeliveredYet|chat
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 1A.4
              subject: marked_as_deleted_but_not_arrived
  - id: missing_item.missing_items_3
    title: {{ missing_items_delivered }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|old
        event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|old
        type: blockGroup
        meta:
          conditions: order.delivered_time >= 1440
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|text
            type: richContent
            text: {{ sorry_missing_items }}
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|chat
            action: chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.1
              subject: missing_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|chat|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|old|chat|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
      - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent
        event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent
        type: blockGroup
        deflection_id: 2A.1
        meta:
          conditions:
            order.delivered_time < 1440 AND
            order.status = DELIVERED
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|text
            type: richContent
            text: {{ missing_items_od_vd }}
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|OP
            type: form
            meta:
              conditions:
                order.payment_type = OP AND
                order.payment_method NOT IN [cash, wallet] AND
                order.vertical_type = restaurants AND
                order.status = DELIVERED
            submit_text: {{ send }}
            action: autoPartialRefund
            constants:
              reason_code: 2A.1
              subject: missing_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|items
                type: itemQuantitySelector
                label: {{ select_the_missing_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|refundMethod
                type: singleSelect
                data_key: refund_method
                is_required: true
                label: {{ select_refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|items
                type: textArea
                is_required: true
                placeholder: {{ write_something }}
                label: {{ please_provide_more_info }}
                data_key: description
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|COD
            type: form
            meta:
              conditions:
                order.payment_method IN [cash, wallet] AND
                order.vertical_type = restaurants AND
                order.status = DELIVERED
            submit_text: {{ send }}
            action: autoPartialRefund
            constants:
              reason_code: 2A.1
              subject: missing_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|items
                type: itemQuantitySelector
                label: {{ select_the_missing_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|refundMethod
                type: singleSelect
                data_key: refund_method
                is_required: true
                label: {{ refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|missingItems|recent|form|items
                type: textArea
                is_required: true
                placeholder: {{ write_something }}
                label: {{ please_provide_more_info }}
                data_key: description
  - id: missing_item.missing_items_4
    title: {{ missing_items_delivered }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent
        event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent|refund
            type: blockGroup
            event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent|refund
            deflection_id: 2A.1
            blocks:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent|refund|text
                type: richContent
                text: {{ recent_refund_missing_items_vd }}
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent|refund|form
                type: form
                submit_text: {{ start_chat }}
                submit_message: {{ thanks_we_will_check }}
                action: chat
                constants:
                  reason_code: 2A.1
                  subject: missing_items
                fields:
                  - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|missingItems|recent|refund|case|items
                    type: itemQuantitySelector
                    label: {{ select_the_items }}
                    data_key: items
  - id: wrong_item.wrong_items_3
    title: {{ wrong_items_delivered }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|old
        event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|old
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions: order.delivered_time >= 1440
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|old|text
            type: richContent
            text: {{ sorry_wrong_items }}
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|old|chat
            action: chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2A.2
              subject: wrong_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|old|chat|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|old|chat|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
      - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent
        event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent
        deflection_id: 2A.2
        type: blockGroup
        meta:
          conditions:
            order.delivered_time < 1440 AND
            order.status = DELIVERED
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|text
            type: richContent
            text: {{ sorry_wrong_items }}
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|OP
            type: form
            submit_text: {{ send }}
            action: autoPartialRefund
            meta:
              conditions:
                order.payment_type = OP AND
                order.payment_method NOT IN [cash, wallet] AND
                order.vertical_type = restaurants AND
                order.status = DELIVERED
            constants:
              reason_code: 2A.2
              subject: wrong_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|OP|items
                type: itemQuantitySelector
                is_required: true
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|OP|refundMethod
                type: singleSelect
                is_required: true
                data_key: refund_method
                label: {{ select_refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|OP|items
                type: textArea
                is_required: true
                placeholder: {{ write_something }}
                label: {{ please_provide_more_info }}
                data_key: description
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|COD
            type: form
            submit_text: {{ send }}
            action: autoPartialRefund
            meta:
              conditions:
                order.payment_method IN [cash, wallet] AND
                order.vertical_type = restaurants AND
                order.status = DELIVERED
            constants:
              reason_code: 2A.2
              subject: wrong_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|COD|items
                type: itemQuantitySelector
                is_required: true
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|COD|refundMethod
                type: singleSelect
                is_required: true
                data_key: refund_method
                label: {{ refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongMissingItems|wrongItems|recent|form|COD|items
                type: textArea
                is_required: true
                placeholder: {{ write_something }}
                label: {{ please_provide_more_info }}
                data_key: description
  - id: wrong_item.wrong_items_4
    title: {{ wrong_items_delivered }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongItems|recent|refund
        type: blockGroup
        event_id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongItems|recent|refund
        deflection_id: 2A.2
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongItems|recent|refund|text
            type: richContent
            text: {{ recent_refund_wrong_items_vd }}
          - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongItems|recent|refund|form
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2A.2
              subject: wrong_items
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|wrongMissingItems|wrongItems|recent|refund|case|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
  - id: damaged_item.1
    title: {{ food_issue_delivered }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|VDDelivered|foodIssue
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|restaurant
            type: link
            text: {{ food_damaged_or_spilled }}
            meta:
              conditions: order.vertical_type = restaurants
            destination: damaged_item.3
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged
            deflection_id: 2H.2
            type: link
            meta:
              conditions: order.vertical_type NOT IN [restaurants]
            text: {{ food_damaged_or_spilled }}
            destination: damaged_item.spilled_or_damaged_item_2
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality
            type: link
            text: {{ food_didnt_met_expectations }}
            destination: food_quality.bad_quality_food_2
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed
            type: link
            text: {{ instructions_not_followed }}
            destination: cooking_instructions_were_not_followed.food_instructions_not_followed
  - id: wrong_order.recent_refund
    title: {{ wrong_order_received }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|receivedWrongOrder|1
        event_id: orders|ordersList|orderDetail|VDDelivered|receivedWrongOrder
        deflection_id: 2B.1
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|receivedWrongOrder|text
            type: richContent
            text: {{ sorry_didnt_met_your_expectations_wrong_order_ }}
          - id: orders|ordersList|orderDetail|VDDelivered|receivedWrongOrder|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2B.1
              subject: recent_refund
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|receivedWrongOrder|message
                type: textArea
                label: {{ enter_your_message }}
                data_key: description
                is_required: true
  - id: delivery_time.not_arrived_on_time_2
    title: {{ not_arrived_on_time }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|notArrivedOnTime|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|VDDelivered|notArrivedOnTime
        deflection_id: 2D
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|notArrivedOnTime|text
            text: {{ not_arrived_on_time_detailed }}
            type: richContent
          - id: orders|ordersList|orderDetail|VDDelivered|notArrivedOnTime|form
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2D.1
              subject: not_arrived_on_time
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|notArrivedOnTime|form|message
                type: textArea
                label: {{ explian_the_issue_to_us }}
                data_key: description
                is_required: true
  - id: inappropriate_behaviour.1
    title: {{ why_was_my_order_cancelled }}
    blocks:
      - id: orders|ordersList|orderDetail|whyCancelled|AddressIncompleteMisstated
        type: blockGroup
        deflection_id: 1B.1
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = ADDRESS_INCOMPLETE_MISSTATED
        event_id: orders|ordersList|orderDetail|whyCancelled|AddressIncompleteMisstated
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|AddressIncompleteMisstated|text
            type: richContent
            text: {{ Address_Incomplete_Misstated }}
      - id: orders|ordersList|orderDetail|whyCancelled|Unreachable
        type: blockGroup
        deflection_id: 1A.9
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = UNREACHABLE
        event_id: orders|ordersList|orderDetail|whyCancelled|Unreachable
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|Unreachable|text
            type: richContent
            text: {{ unreachable }}
      - id: orders|ordersList|orderDetail|whyCancelled|OutsideServiceHours
        type: blockGroup
        deflection_id: 1A.6
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = OUTSIDE_SERVICE_HOURS
        event_id: orders|ordersList|orderDetail|whyCancelled|OutsideServiceHours
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|OutsideServiceHours|text
            type: richContent
            text: {{ Outside_Service_Hours }}
      - id: orders|ordersList|orderDetail|whyCancelled|TooBusy
        type: blockGroup
        deflection_id: 1A.6
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = TOO_BUSY
        event_id: orders|ordersList|orderDetail|whyCancelled|TooBusy
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|TooBusy|text
            type: richContent
            text: {{ Too_Busy }}
      - id: orders|ordersList|orderDetail|whyCancelled|OutsideDeliveryArea
        type: blockGroup
        deflection_id: 1A.6
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = OUTSIDE_DELIVERY_AREA
        event_id: orders|ordersList|orderDetail|whyCancelled|OutsideDeliveryArea
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|OutsideDeliveryArea|text
            type: richContent
            text: {{ Outside_Delivery_Area }}
      - id: orders|ordersList|orderDetail|whyCancelled|TechnicalProblem
        type: blockGroup
        deflection_id: 3A.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason IN [TECHNICAL_PROBLEM, TEST_ORDER, REASON_UNKNOWN]
        event_id: orders|ordersList|orderDetail|whyCancelled|TechnicalProblem
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|TechnicalProblem|text
            type: richContent
            text: {{ Technical_Problem }}
      - id: orders|ordersList|orderDetail|whyCancelled|ItemUnavailable
        type: blockGroup
        deflection_id: 2A.1
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = ITEM_UNAVAILABLE
        event_id: orders|ordersList|orderDetail|whyCancelled|ItemUnavailable
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|ItemUnavailable|text
            type: richContent
            text: {{ Item_Unavailable }}
      - id: orders|ordersList|orderDetail|whyCancelled|CourierAccident
        type: blockGroup
        deflection_id: 1A.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = COURIER_ACCIDENT
        event_id: orders|ordersList|orderDetail|whyCancelled|CourierAccident
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|CourierAccident|text
            type: richContent
            text: {{ Courier_Accident }}
      - id: orders|ordersList|orderDetail|whyCancelled|CourierUnreachable
        type: blockGroup
        deflection_id: 1A.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = COURIER_UNREACHABLE
        event_id: orders|ordersList|orderDetail|whyCancelled|CourierUnreachable
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|CourierUnreachable|text
            type: richContent
            text: {{ Courier_Unreachable }}
      - id: orders|ordersList|orderDetail|whyCancelled|DuplicateOrder
        type: blockGroup
        deflection_id: 7A.9
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = DUPLICATE_ORDER
        event_id: orders|ordersList|orderDetail|whyCancelled|DuplicateOrder
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|DuplicateOrder|text
            type: richContent
            text: {{ Duplicate_Order }}
      - id: orders|ordersList|orderDetail|whyCancelled|OrderModificationNotPossible
        type: blockGroup
        deflection_id: 1B.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = ORDER_MODIFICATION_NOT_POSSIBLE
        event_id: orders|ordersList|orderDetail|whyCancelled|OrderModificationNotPossible
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|OrderModificationNotPossible|text
            type: richContent
            text: {{ Order_Modification_Not_Possible }}
      - id: orders|ordersList|orderDetail|whyCancelled|Closed
        type: blockGroup
        deflection_id: 1A.6
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = CLOSED
        event_id: orders|ordersList|orderDetail|whyCancelled|Closed
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|Closed|text
            type: richContent
            text: {{ closed }}
      - id: orders|ordersList|orderDetail|whyCancelled|NoCourier
        type: blockGroup
        deflection_id: 1A.10
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = NO_COURIER
        event_id: orders|ordersList|orderDetail|whyCancelled|NoCourier
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|NoCourier|text
            type: richContent
            text: {{ No_Courier }}
      - id: orders|ordersList|orderDetail|whyCancelled|MistakeError
        type: blockGroup
        deflection_id: 3A.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = MISTAKE_ERROR
        event_id: orders|ordersList|orderDetail|whyCancelled|MistakeError
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|MistakeError|text
            type: richContent
            text: {{ Mistake_Error }}
      - id: orders|ordersList|orderDetail|whyCancelled|NeverDelivered
        type: blockGroup
        deflection_id: 1A.4
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason IN [NEVER_DELIVERED, UNABLE_TO_FIND, UNABLE_TO_PAY]
        event_id: orders|ordersList|orderDetail|whyCancelled|NeverDelivered
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|NeverDelivered|text
            type: richContent
            text: {{ Never_Delivered }}
      - id: orders|ordersList|orderDetail|whyCancelled|VoucherNotApplied
        type: blockGroup
        deflection_id: 3C.9
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = VOUCHER_NOT_APPLIED
        event_id: orders|ordersList|orderDetail|whyCancelled|VoucherNotApplied
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|VoucherNotApplied|text
            type: richContent
            text: {{ Voucher_Not_Applied }}
      - id: orders|ordersList|orderDetail|whyCancelled|WrongOrderItemsDelivered
        type: blockGroup
        deflection_id: 2A.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = WRONG_ORDER_ITEMS_DELIVERED
        event_id: orders|ordersList|orderDetail|whyCancelled|WrongOrderItemsDelivered
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|WrongOrderItemsDelivered|text
            type: richContent
            text: {{ Wrong_Order_Items_Delivered }}
      - id: orders|ordersList|orderDetail|whyCancelled|LateDelivery
        type: blockGroup
        deflection_id: 1A.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = LATE_DELIVERY
        event_id: orders|ordersList|orderDetail|whyCancelled|LateDelivery
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|LateDelivery|text
            type: richContent
            text: {{ Late_Delivery }}
      - id: orders|ordersList|orderDetail|whyCancelled|NoResponse
        type: blockGroup
        deflection_id: 1A.9
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = NO_RESPONSE
        event_id: orders|ordersList|orderDetail|whyCancelled|NoResponse
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|NoResponse|text
            type: richContent
            text: {{ No_Response }}
      - id: orders|ordersList|orderDetail|whyCancelled|UnprofessionalBehaviour
        type: blockGroup
        deflection_id: 2E.1
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = UNPROFESSIONAL_BEHAVIOUR
        event_id: orders|ordersList|orderDetail|whyCancelled|UnprofessionalBehaviour
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|UnprofessionalBehaviour|text
            type: richContent
            text: {{ Unprofessional_Behaviour }}
      - id: orders|ordersList|orderDetail|whyCancelled|FraudPrank
        type: blockGroup
        deflection_id: 1A.1
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = FRAUD_PRANK
        event_id: orders|ordersList|orderDetail|whyCancelled|FraudPrank
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|FraudPrank|text
            type: richContent
            text: {{ Fraud_Prank }}
      - id: orders|ordersList|orderDetail|whyCancelled|FoodQualitySpillage
        type: blockGroup
        deflection_id: 2H.2
        meta:
          conditions:
            order.delivery_type IN [platform_delivery, vendor_delivery] AND
            order.cancellation_reason = FOOD_QUALITY_SPILLAGE
        event_id: orders|ordersList|orderDetail|whyCancelled|FoodQualitySpillage
        blocks:
          - id: orders|ordersList|orderDetail|whyCancelled|FoodQualitySpillage|text
            type: richContent
            text: {{ Food_Quality_Spillage }}
  - id: payment_issue.cancelled_was_charged_past_turnaround
    title: {{ will_i_get_refund }}
    blocks:
      - id: orders|ordersList|orderDetail|cancelled|refund|OP
        type: blockGroup
        event_id: orders|ordersList|orderDetail|cancelled|refund|OP
        meta:
          conditions: order.status IN [CANCELLED, EXPIRED, PENDING_ORDER_FAILED]
        blocks:
          - id: orders|ordersList|orderDetail|cancelled|refund|OP|beforeTA
            type: blockGroup
            event_id: orders|ordersList|orderDetail|cancelled|refund|OP|beforeTA
            meta:
              conditions: order.creation_time < 4320
            deflection_id: 3B
            blocks:
              - id: orders|ordersList|orderDetail|cancelled|refund|OP|beforeTA|text
                type: richContent
                text: {{ it_will_depend_the_circumstances_of_your_cancellation }}
              - id: orders|ordersList|orderDetail|cancelled|refund|OP|beforeTA|form
                type: form
                submit_text: {{ start_chat }}
                submit_message: {{ thanks_we_will_check }}
                action: chat
                constants:
                  reason_code: 2F.4
                  subject: cancelled_was_charged_past_turnaround
                fields:
                  - id: orders|ordersList|orderDetail|cancelled|refund|OP|beforeTA|form|message
                    type: textArea
                    placeholder: {{ write_your_message_here }}
                    label: {{ write_your_message_here }}
                    data_key: description
                    is_required: true
          - id: orders|ordersList|orderDetail|cancelled|refund|OP|afterTA
            deflection_id: 3B
            type: blockGroup
            event_id: orders|ordersList|orderDetail|cancelled|refund|OP|afterTA
            meta:
              conditions: order.creation_time >= 4320
            blocks:
              - id: orders|ordersList|orderDetail|cancelled|refund|OP|afterTA|text
                type: richContent
                text: {{ it_will_depend_the_circumstances_of_your_cancellation_late }}
              - id: orders|ordersList|orderDetail|cancelled|refund|OP|afterTA|form
                type: form
                submit_text: {{ start_chat }}
                submit_message: {{ thanks_our_representatives_at_your_service }}
                action: chat
                constants:
                  reason_code: 2F.5
                  subject: cancelled_was_charged_past_turnaround
                fields:
                  - id: orders|ordersList|orderDetail|cancelled|refund|OP|afterTA|form|message
                    type: textArea
                    placeholder: {{ write_your_message_here }}
                    label: {{ write_your_message_here }}
                    data_key: description
                    is_required: true
  - id: payment_issue.what_happens_to_voucher_redeemed
    title: {{ what_happens_to_voucher_redeemed }}
    blocks:
      - id: orders|ordersList|orderDetail|cancelled|whatHappensToVoucherRedeemed|1
        type: blockGroup
        deflection_id: 3B
        event_id: orders|ordersList|orderDetail|cancelled|whatHappensToVoucherRedeemed
        blocks:
          - id: orders|ordersList|orderDetail|cancelled|whatHappensToVoucherRedeemed|text
            type: richContent
            text: {{ your_voucher_redeemded_and_you_can_use_it_again }}
          - id: orders|ordersList|orderDetail|cancelled|whatHappensToVoucherRedeemed|form
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ message_sent }}
            action: chat
            constants:
              reason_code: 3C.1
              subject: what_happens_to_voucher_redeemed
            fields:
              - id: orders|ordersList|orderDetail|cancelled|whatHappensToVoucherRedeemed|form|message
                type: textArea
                placeholder: {{ explain_the_issue }}
                label: {{ explain_the_issue }}
                data_key: description
                is_required: true
  - id: information_request.i_have_a_different_issue
    title: {{ i_have_a_different_issue }}
    blocks:
      - id: orders|ordersList|orderDetail|cancelled|differentIssue|1
        type: blockGroup
        deflection_id: 3E
        event_id: orders|ordersList|orderDetail|cancelled|differentIssue
        blocks:
          - id: orders|ordersList|orderDetail|cancelled|differentIssue|text
            type: richContent
            text: {{ cant_find_the_solution_to_your_problem }}
          - id: orders|ordersList|orderDetail|cancelled|differentIssue|form
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 3E.1
              subject: i_have_a_different_issue
            fields:
              - id: orders|ordersList|orderDetail|cancelled|differentIssue|form
                type: textArea
                placeholder: {{ enter_your_question }}
                label: {{ enter_your_question }}
                data_key: description
                is_required: true
  - id: cancellation.picked_up
    title: {{ want_to_cancel_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|cancelMyOrder|1
        event_id: orders|ordersList|orderDetail|PU|cancelMyOrder
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|cancelMyOrder|text
            type: richContent
            text: {{ HS_pickup_location }}
          - id: orders|ordersList|orderDetail|PU|cancelMyOrder|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1C.6
              subject: picked_up
  - id: need_help_locating_partner_for_pickup.picked_up
    title: {{ cant_find_pickup_location }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|accepted|location|1
        event_id: orders|ordersList|orderDetail|PU|accepted|location
        deflection_id: 1A.11
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|accepted|location|text
            type: richContent
            text: {{ HS_pickup_location }}
          - id: orders|ordersList|orderDetail|PU|accepted|location|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.11
              subject: picked_up
  - id: page.30
    title: {{ vendor_closed_title }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|accepted|vendorclosed
        event_id: orders|ordersList|orderDetail|PU|accepted|vendorclosed
        deflection_id: 1A.11
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|accepted|vendorclosed|text
            type: richContent
            text: {{ vendor_closed_decription }}
          - id: orders|ordersList|orderDetail|PU|accepted|vendorclosed|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.11
              subject: picked_up
            fields:
              - id: orders|ordersList|orderDetail|PU|accepted|vendorclosed|chat|image
                type: imageUploader
                is_required: true
                data_key: image_url
  - id: page.31
    title: {{ order_preddelay_title }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|accepted|delayinprep
        event_id: orders|ordersList|orderDetail|PU|accepted|delayinprep
        deflection_id: 1A.3
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|accepted|delayinprep|text
            type: richContent
            text: {{ restaurant_preparing_delay_pickup }}
          - id: orders|ordersList|orderDetail|PU|accepted|delayinprep|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.3
              subject: picked_up
  - id: missing_item.picked_up
    title: {{ missing_items_pickup }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|accepted|missing|1
        event_id: orders|ordersList|orderDetail|PU|accepted|missing
        deflection_id: 2A.1
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|accepted|missing|text
            type: richContent
            text: {{ pickup_missing }}
          - id: orders|ordersList|orderDetail|PU|accepted|missing|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2A.1
              subject: picked_up
            fields:
              - id: orders|ordersList|orderDetail|PU|accepted|missing|chat|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|PU|accepted|missing|chat|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
  - id: wrong_item.picked_up
    title: {{ wrong_item_pickup }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|accepted|wrong|1
        event_id: orders|ordersList|orderDetail|PU|accepted|wrong
        deflection_id: 2A.2
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|accepted|wrong|text
            type: richContent
            text: {{ pickup_wrong }}
          - id: orders|ordersList|orderDetail|PU|accepted|wrong|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2A.2
              subject: picked_up
            fields:
              - id: orders|ordersList|orderDetail|PU|accepted|wrong|chat|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|PU|accepted|wrong|chat|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
  - id: order_marked_as_delivered_but_didnt_receive.picked_up
    title: {{ did_not_receive_order }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|accepted|didNotReceiveOrder|1
        event_id: orders|ordersList|orderDetail|PU|accepted|didNotReceiveOrder
        deflection_id: 1A.4
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|accepted|didNotReceiveOrder|text
            type: richContent
            text: {{ did_not_receive_order_copy }}
          - id: orders|ordersList|orderDetail|PU|accepted|didNotReceiveOrder|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.4
              subject: picked_up
  - id: other_voucher_inquiry.picked_up
    title: {{ my_voucher_was_not_applied }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|voucher|1
        event_id: orders|ordersList|orderDetail|PU|voucher
        deflection_id: 3C.8
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|voucher|text
            type: richContent
            text: {{ we_are_Sorry_your_voucher_wasnt_applied }}
          - id: orders|ordersList|orderDetail|PU|PU|voucher|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 3C.8
              subject: picked_up
  - id: information_request.different_issue_3
    title: {{ different_issue }}
    blocks:
      - id: orders|ordersList|orderDetail|PU|differentIssue|1
        event_id: orders|ordersList|orderDetail|PU|differentIssue
        deflection_id: 3E
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|PU|differentIssue|text
            text: {{ different_issue_detailed }}
            type: richContent
          - id: orders|ordersList|orderDetail|PU|differentIssue|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 3E.1
              subject: different_issue
            fields:
              - id: orders|ordersList|orderDetail|PU|differentIssue|form|message
                type: textArea
                label: {{ explian_the_issue_to_us }}
                data_key: description
                is_required: true
  - id: restaurant_hasnt_started_preparing_the_food.my_order_is_pending_delayed
    title: {{ where_is_my_order_courier }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingBeforeETA
        event_id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingBeforeETA
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions:
            order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
            AND
            order.creation_time BETWEEN 0:10
        blocks:
          - id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingBeforeETA|text
            type: richContent
            text: {{ where_is_my_order_courier_pending }}
      - id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingAfterETA
        event_id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingAfterETA
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions:
            order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
            AND
            order.creation_time >= 10
        blocks:
          - id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingAfterETA|text
            type: richContent
            text: {{ where_is_my_order_courier_pending_late }}
          - id: orders|ordersList|orderDetail|courier|pendingTransmitted|whereIsOrder|pendingAfterETA|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.5
              subject: my_order_is_pending_delayed
  - id: restaurant_hasnt_started_preparing_the_food.cancel_not_accepted_order
    title: {{ cancel_my_order_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|pendingTransmitted|cancelMyOrder|pending
        event_id: orders|ordersList|orderDetail|courier|pendingTransmitted|cancelMyOrder|pending
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
        blocks:
          - id: orders|ordersList|orderDetail|courier|pendingTransmitted|cancelMyOrder|pending|text
            type: richContent
            text: {{ cancel_my_order_courier_pending }}
          - id: orders|ordersList|orderDetail|courier|pendingTransmitted|cancelMyOrder|pending|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_not_accepted_order
            fields:
              - id: orders|ordersList|orderDetail|courier|pendingTransmitted|cancelMyOrder|pending|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
  - id: restaurant_hasnt_started_preparing_the_food.1
    title: {{ where_is_my_order_courier }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|accepted|whereIsOrder|1
        event_id: orders|ordersList|orderDetail|courier|accepted|whereIsOrder
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED]
        blocks:
          - id: orders|ordersList|orderDetail|courier|accepted|whereIsOrder|text
            type: richContent
            text: {{ where_is_my_order_courier_accepted }}
  - id: restaurant_hasnt_started_preparing_the_food.courier_need_support
    title: {{ different_issue_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail||courier|needSupportFromMyRider|accepted|1
        event_id: orders|ordersList|orderDetail||courier|needSupportFromMyRider|accepted
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED]
        blocks:
          - id: orders|ordersList|orderDetail|courier|needSupportFromMyRider|accepted|text
            type: richContent
            text: {{ need_support_from_rider_courier_body }}
          - id: orders|ordersList|orderDetail|courier|needSupportFromMyRider|accepted|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.5
              subject: courier_need_support
  - id: restaurant_hasnt_started_preparing_the_food.cancel_accepted_order
    title: {{ cancel_my_order_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|cancelMyOrder|accepted
        event_id: orders|ordersList|orderDetail|courier|cancelMyOrder|accepted
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED]
        blocks:
          - id: orders|ordersList|orderDetail|courier|cancelMyOrder|accepted|text
            type: richContent
            text: {{ cancel_my_order_courier_accepted }}
          - id: orders|ordersList|orderDetail|courier|cancelMyOrder|accepted|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_accepted_order
            fields:
              - id: orders|ordersList|orderDetail|courier|cancelMyOrder|accepted|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
  - id: restaurant_hasnt_started_preparing_the_food.2
    title: {{ where_is_my_order_courier }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|pickedUp|whereIsOrder|pickedUp
        event_id: orders|ordersList|orderDetail|courier|pickedUp|whereIsOrder|pickedUp
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
        blocks:
          - id: orders|ordersList|orderDetail|courier|pickedUp|whereIsOrder|pickedUp|text
            type: richContent
            text: {{ where_is_my_order_courier_pickedup }}
  - id: restaurant_hasnt_started_preparing_the_food.courier_need_support_2
    title: {{ need_support_from_rider_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail||courier|needSupportFromMyRider|pickedUp
        event_id: orders|ordersList|orderDetail||courier|needSupportFromMyRider|pickedUp
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
        blocks:
          - id: orders|ordersList|orderDetail|courier|needSupportFromMyRider|pickedUp|text
            type: richContent
            text: {{ need_support_from_rider_courier_body }}
          - id: orders|ordersList|orderDetail|courier|needSupportFromMyRider|pickedUp|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.5
              subject: courier_need_support
  - id: restaurant_hasnt_started_preparing_the_food.courier_need_support_3
    title: {{ payment_issue_courier_btn }}
    blocks:
      - id: liveOrder|orderDeftail|courier|paymentIssue|pickedUp
        event_id: orders|ordersList|orderDetail|courier|paymentIssue|pickedUp
        deflection_id: 1A.5
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|paymentIssue|pickedUp|text
            type: richContent
            text: {{ payment_issue_courier_body }}
          - id: orders|ordersList|orderDetail|courier|paymentIssue|pickedUp|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: courier_need_support
            fields:
              - id: liveOrder|orderDetail|OD|cancelMyOrder|AcceptedLate|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
  - id: restaurant_hasnt_started_preparing_the_food.cancel_picked_up_order
    title: {{ cancel_my_order_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|cancelMyOrder|pickedUp
        event_id: orders|ordersList|orderDetail|courier|cancelMyOrder|pickedUp
        deflection_id: 1A.5
        type: blockGroup
        meta:
          conditions: order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
        blocks:
          - id: orders|ordersList|orderDetail|courier|cancelMyOrder|pickedUp|text
            type: richContent
            text: {{ cancel_my_order_courier_pickedup }}
          - id: orders|ordersList|orderDetail|courier|cancelMyOrder|pickedUp|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              subject: cancel_picked_up_order
            fields:
              - id: orders|ordersList|orderDetail|courier|cancelMyOrder|pickedUp|form|reason
                type: singleSelect
                data_key: reason_code
                is_required: true
                label: {{ cancel_reason }}
                choices:
                  - value: 1C.1
                    text: {{ my_order_will_take_longer_than_expected }}
                  - value: 1C.4
                    text: {{ order_modification_not_possible }}
                  - value: 1C.4
                    text: {{ i_want_to_change_payment_method }}
                  - value: 1C.3
                    text: {{ my_voucher_was_not_applied }}
                  - value: 1C.6
                    text: {{ i_changed_my_mind }}
                  - value: 1C.8
                    text: {{ this_is_a_duplicate_order }}
  - id: order_marked_as_delivered_but_didnt_receive.marked_as_deleted_but_not_arrived_2
    title: {{ marked_as_delivered_didnt_receive_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|markedAsDelivered|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|markedAsDelivered
        deflection_id: 1A.4
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|markedAsDelivered|2
            type: richContent
            text: {{ marked_as_delivered_didnt_receive_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|markedAsDelivered|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.4
              subject: marked_as_deleted_but_not_arrived
  - id: wrong_missing_item.wrong_missing_items
    title: {{ wrong_missing_items_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|wrongMissingItems|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|wrongMissingItems
        deflection_id: 2A
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|wrongMissingItems|2
            type: richContent
            text: {{ wrong_missing_items_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|wrongMissingItems|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2A.1
              subject: wrong_missing_items
            fields:
              - id: orders|ordersList|orderDetail|courier|Delivered|wrongMissingItems|items
                type: itemQuantitySelector
                label: {{ select_the_missing_items }}
                data_key: items
  - id: rider_issue.rider_feedback_3
    title: {{ rider_feedback_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider
        deflection_id: 2E
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider|2
            type: richContent
            text: {{ rider_feedback_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2E
              subject: rider_feedback
            fields:
              - id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider|case|reason
                type: singleSelect
                data_key: rider_feedback_key
                choices:
                  - value: 2E.1
                    text: {{ behaviour }}
                  - value: 2E.2
                    text: {{ missing_equipment }}
                  - value: 2E.4
                    text: {{ cash_change_issue }}
                  - value: 2E.3
                    text: {{ order_not_delivered_to_doorstep }}
                  - value: 2E.5
                    text: {{ delivery_instructions_not_followed }}
              - id: orders|ordersList|orderDetail|courier|Delivered|feedbackOnRider|case|message
                type: textArea
                label: {{ explian_the_issue_to_us }}
                is_required: true
                data_key: description
  - id: payment_and_refunds.1
    title: {{ question_on_payment_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|receiptIsDifferent
        text: {{ receipt_is_different_courier_btn }}
        type: link
        destination: incorrect_invoice_details.receipt_is_different
      - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|paidTwice
        text: {{ paid_twice_courier_btn }}
        type: link
        destination: incorrect_invoice.receipt_is_different
      - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|didntReceiveInvoice
        text: {{ didnt_receive_invoice_courier_btn }}
        type: link
        destination: invoice_missing.didnt_receive_invoice_5
  - id: post_delivery.didnt_receive_invoice
    title: {{ different_issue_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|differentIssue|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|differentIssue
        deflection_id: '2'
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|differentIssue|text
            type: richContent
            text: {{ different_issue_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|differentIssue|case
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.1
              subject: didnt_receive_invoice
            fields:
              - id: orders|ordersList|orderDetail|courier|Delivered|differentIssue|case|message
                type: textArea
                label: {{ explain_the_issue }}
                placeholder: {{ write_something }}
                data_key: description
                is_required: true
  - id: refund_query.refund_query
    title: {{ when_will_get_refund_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|withinTA
        event_id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|withinTA
        deflection_id: 2F.4
        type: blockGroup
        meta:
          conditions: order.promised_time < 4320
        blocks:
          - id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|withinTA|text
            type: richContent
            text: {{ when_will_get_refund_courier_within_TA }}
      - id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|afterTA
        event_id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|afterTA
        deflection_id: 2F.4
        type: blockGroup
        meta:
          conditions: order.promised_time >= 4320
        blocks:
          - id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|afterTA|1
            type: richContent
            text: {{ when_will_get_refund_courier_after_TA }}
          - id: orders|ordersList|orderDetail|courier|cancelled|OP|whenIReceiveMyRefund|afterTA|2
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.4
              subject: refund_query
  - id: change_address.change_delivery_address
    title: {{ change_address_in_my_order }}
    meta:
      before_display:
        namespace: alreadySavedAddresses
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/customer-addresses/<<order.orderId>>?exclude_none_of_the_above=true
          has_default_helpcenter_headers: true
          method: GET
    blocks:
      - id: changeDeliveryAddress|text
        type: richContent
        text: {{ address_change_select_address_page }}
        deflection_id: 1B.1 
      - id: changeDeliveryAddress|form
        type: formV2
        namespace: changeDeliveryAddressNamespace
        submit_button_text: {{ schange_address_submit_button }}
        constants:
          reason_code: 1B.1
        fields:
          - id: changeDeliveryAddress|getCustomerAddresses|success
            type: choiceGroup
            data_key: addressChoice
            is_required: true
            meta:
              conditions: $alreadySavedAddresses.response.status = 200
            blocks:
              - id: changeDeliveryAddress|getCustomerAddresses|success|savedAddressChoices|<<$index>>
                value: <<address.id>>
                type: radio
                text: <<address.title>>
                meta:
                  repeat: address in $alreadySavedAddresses.response.body.payload
              - id: changeDeliveryAddress|getCustomerAddresses|success|savedAddressChoices|false
                value: fallback_to_chat
                type: radio
                text: {{ none_above_selector }}
                meta:
                  conditions: supportedIntents.createNewAddress = False
          - id: changeDeliveryAddress|getCustomerAddresses|error|404
            type: choiceGroup
            data_key: addressChoice
            is_required: true
            meta:
              conditions: $alreadySavedAddresses.response.status != 200
            blocks:
              - id: changeDeliveryAddress|getCustomerAddresses|error|404|createNewAddressChoice|true
                value: fallback_to_chat
                type: radio
                text: {{ none_above_selector }}
                meta:
                  conditions: supportedIntents.createNewAddress = False
        on_submit:
          - id: addressCreationDecision
            type: decision
            branches:
              - conditions: $changeDeliveryAddressNamespace.fieldValues.addressChoice = fallback_to_chat
                next_step_id: navigateToChatPage
              - conditions: $changeDeliveryAddressNamespace.fieldValues.getSavedAddressesFailed
                  = get_saved_addresses_failed
                next_step_id: navigateToNetworkTrafficErrorPage
              - next_step_id: addressChangeRequest
          - id: addressChangeRequest
            type: request
            endpoint:
              url: https://helpcenter-eu.usehurrier.com/automations/v2/update-address
              has_default_helpcenter_headers: true
              method: POST
              request_body_casing: snake
              body:
                address_geo_id: <<$changeDeliveryAddressNamespace.fieldValues.addressChoice>>
                order_id: <<order.orderId>>
            next_step_id: addressChangeDecision
          - id: addressChangeDecision
            type: decision
            branches:
              - conditions: $changeDeliveryAddressNamespace.steps.addressChangeRequest.response.body.type
                  = address_updated_successfully
                next_step_id: navigateToSuccessPage
              - conditions: $changeDeliveryAddressNamespace.steps.addressChangeRequest.response.body.type
                  = vendor_delivery_impossible
                next_step_id: navigateToVendorDeliveryImpossiblePage
              - conditions: $changeDeliveryAddressNamespace.steps.addressChangeRequest.response.body.type
                  = incompatible_delivery_fee
                next_step_id: navigateToIncompatibleDeliveryFeePage
              - conditions: $changeDeliveryAddressNamespace.steps.addressChangeRequest.response.body.type
                  = could_not_update_address
                next_step_id: navigateToNetworkTrafficErrorPage
              - next_step_id: navigateToChatPage
          - id: intentFallbackNextStep
            type: navigation
            destination: page.navigateToChatPage1
          - id: navigateToSuccessPage
            type: navigation
            destination: page.navigateToSuccessPage
          - id: navigateToVendorDeliveryImpossiblePage
            type: navigation
            destination: page.navigateToVendorDeliveryImpossiblePage
          - id: navigateToIncompatibleDeliveryFeePage
            type: navigation
            destination: page.navigateToIncompatibleDeliveryFeePage
          - id: navigateToNetworkTrafficErrorPage
            type: navigation
            destination: page.navigateToNetworkTrafficErrorPage
          - id: navigateToChatPage
            type: navigation
            destination: page.navigateToChatPage1
  - id: page.navigateToChatPage1
    title: {{ change_address_fail_title_page }}
    blocks:
      - id: addressChangeResult|error|chat|text
        type: richContent
        text: {{ leaf_change_dropoff_address }}
      - id: addressChangeResult|error|chat|form
        type: form
        submit_text: {{ start_chat }}
        action: chat
        constants:
          reason_code: 1B.1
          subject: could_not_update_delivery_address_chat
        fields:
          - id: addressChangeResult|error|chat|form|chat|text
            type: textInput
            label: {{ label_change_address }}
            data_key: description
            is_required: true
  - id: page.navigateToSuccessPage
    title: {{ address_change_success_title_page }}
    blocks:
      - id: addressChangeResult|success
        type: result
        result_type: SUCCESS
        title: {{ address_updated_successfully_title }}
        description: {{ address_updated_successfully }}
  - id: page.navigateToVendorDeliveryImpossiblePage
    title: {{ change_address_fail_title_page }}
    blocks:
      - id: addressChangeResult|error|vendorDeliveryImpossible|text
        type: result
        result_type: ERROR
        title: {{ vendor_delivery_impossible_title }}
        description: {{ vendor_delivery_impossible }}
      - id: addressChangeResult|error|vendorDeliveryImpossible|form
        type: form
        submit_text: {{ start_chat }}
        action: chat
        constants:
          reason_code: 1B.1
          subject: change_delivery_address
        fields:
          - id: addressChangeResult|error|vendorDeliveryImpossible|form|chat
            type: textInput
            label: {{ label_change_address }}
            data_key: description
            is_required: true
  - id: page.navigateToIncompatibleDeliveryFeePage
    title: {{ change_address_fail_title_page }}
    blocks:
      - id: addressChangeResult|error|incompatibleDeliveryFee|result
        type: result
        result_type: ERROR
        title: {{ vendor_delivery_impossible_title }}
        description: {{ vendor_delivery_impossible }}
      - id: addressChangeResult|error|incompatibleDeliveryFee|form
        type: form
        submit_text: {{ start_chat }}
        action: chat
        constants:
          reason_code: 1B.1
          subject: change_delivery_address
        fields:
          - id: addressChangeResult|error|incompatibleDeliveryFee|form|chat
            type: textInput
            label: {{ label_change_address }}
            data_key: description
            is_required: true
  - id: page.navigateToNetworkTrafficErrorPage
    title: {{ change_address_fail_title_page }}
    blocks:
      - id: addressChangeResult|error|networkTrafficError|text
        type: result
        result_type: ERROR
        title: {{ could_not_update_address_title }}
        description: {{ could_not_update_address }}
      - id: addressChangeResult|error|networkTrafficError|form
        type: form
        submit_text: {{ start_chat }}
        action: chat
        constants:
          reason_code: 1B.1
          subject: change_delivery_address
        fields:
          - id: addressChangeResult|error|networkTrafficError|form|chat
            type: textInput
            label: {{ label_change_address }}
            data_key: description
            is_required: true
  - id: change_address.rider_cant_find_location
    title: {{ rider_cant_find_my_location }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|changeOrder|wrongAddress|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|changeOrder|wrongAddress
        deflection_id: 1A.7
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|wrongAddress|text
            type: richContent
            text: {{ leaf_wrong_dropoff_address }}
          - id: orders|ordersList|orderDetail|OD|changeOrder|wrongAddress|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1A.7
              subject: wrong_delivery_address
            fields:
              - id: orders|ordersList|orderDetail|OD|changeOrder|wrongAddress|form|chat
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
                is_required: true
  - id: change_delivery_instructions.1
    title: {{ add_delivery_instructions_link }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|addDeliveryInstructions|blockGroup
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|addDeliveryInstructions|blockGroup
        deflection_id: 1B.3
        blocks:
          - id: orders|ordersList|orderDetail|OD|addDeliveryInstructions|content
            type: richContent
            text: {{ you_can_add_delivery_instructions_as_notes }}
          - id: orders|ordersList|orderDetail|OD|addDeliveryInstructions|form
            type: form
            submit_text: {{ send }}
            action: deliveryInstructions
            constants:
              reason_code: 1B.3
            fields:
              - id: orders|ordersList|orderDetail|OD|addDeliveryInstructions|form|textArea
                type: textArea
                label: {{ addDeliveryInstructions_textArea }}
                is_required: true
                placeholder: {{ addDeliveryInstructions_textArea_placeholder }}
                data_key: delivery_instructions
  - id: change_food_items.1
    title: {{ change_food_items_title }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|pending|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|pending
        deflection_id: 1B.2
        meta:
          conditions: order.status IN [PENDING, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, WAITING_FOR_VALIDATION]
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|pending|text|1
            type: richContent
            text: {{ change_order_by_speaking }}
      - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|transmitted|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|transmitted
        deflection_id: 1B.2
        meta:
          conditions: order.status IN [TRANSMITTED, DISPLAYED_AT_VENDOR]
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|transmitted|text|1
            type: richContent
            text: {{ change_order_by_speaking }}
      - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|accepted|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|accepted
        deflection_id: 1B.2
        meta:
          conditions: order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED]
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|accepted|text|1
            type: richContent
            text: {{ already_cooking_no_order_modification }}
      - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|pickedUp|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|pickedUp
        deflection_id: 1B.2
        meta:
          conditions: order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|changeItems|pickedUp|text|1
            type: richContent
            text: {{ order_changes_not_possible }}
  - id: change_voucher.1
    title: {{ add_voucher_to_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|changeOrder|addVoucher|1
        event_id: orders|ordersList|orderDetail|OD|changeOrder|addVoucher
        deflection_id: 1B.7
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|addVoucher|text|1
            type: richContent
            text: {{ add_voucher_impossible }}
  - id: change_cooking_instructions.1
    title: {{ add_food_instructions }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|changeOrder|addInstructions|1
        event_id: orders|ordersList|orderDetail|OD|changeOrder|addInstructions
        deflection_id: 1B.5
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|addInstructions|text|1
            type: richContent
            text: {{ add_notes_impossible }}
  - id: change_payment_method.1
    title: {{ change_payment_method }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|changeOrder|changePaymentMethod|1
        event_id: orders|ordersList|orderDetail|OD|changeOrder|changePaymentMethod
        deflection_id: 1B.6
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|OD|changeOrder|changePaymentMethod|text|1
            type: richContent
            text: {{ change_payment_method_impossible }}
  - id: damaged_item.2
    title: {{ food_damaged_or_spilled }}
    meta:
      before_display:
        namespace: initialChecks
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/checks/refund-initial-checks/<<order.orderId>>
          has_default_helpcenter_headers: true
          method: GET
          body:
            order_id: <<order.order_id>>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|requestAlreadyRaised
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type = already_routed_to_chat
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|refundActionCheckRequestAlreadyRaised|resultError
            type: result
            result_type: ERROR
            title: {{ request_already_raised }}
            description: {{ request_already_raised_damaged }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|refundActionCheckRequestAlreadyRaised|resultError|chat
            action: chat
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2H.2
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|walletAlreadyProcessed
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [already_added_to_wallet, voucher_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|walletAlreadyProcessed|resultError
            type: result
            result_type: ERROR
            title: {{ partial_refund_already_added_to_wallet_title }}
            description: {{ partial_refund_already_added_to_wallet_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|walletAlreadyProcessed|resultError|deepLink|wallet
            type: deepLink
            deeplink_url: hungerstation://wallet/
            deeplink_title: wallet_link
            submit_text: {{ wallet_deeplink }}
          - id: partialRefundV2|refundActionChec|wWalletAlreadyProcessed|resultError|deepLink|orderAgain
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|alreadyRefundedAutomatically
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [already_refunded_automatically,
            order_already_refunded_external]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|alreadyRefundedAutomatically|resultSuccess
            type: result
            result_type: SUCCESS
            title: {{ partial_refund_already_added_to_online_title }}
            description: {{ partial_refund_already_refunded_online_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|alreadyRefundedAutomatically|resultSuccess|deepLink
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: restaurant_list
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|autoPartialRefundNotPossible
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type IN [auto_partial_refund_not_possible,
            wallet_creation_failed, online_payment_failed]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|autoPartialRefundNotPossible|resultSuccess
            type: result
            result_type: ERROR
            title: {{ partial_refund_error_title }}
            description: {{ partial_refund_chat_fallback_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|autoPartialRefundNotPossible|resultSuccess|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2H.2
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|caseAlreadyCreated
        type: blockGroup
        meta:
          conditions: $initialChecks.response.body.type = case_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|caseCreated|resultSuccess
            type: result
            result_type: SUCCESS
            title: {{ case_created_title_reactive_comp }}
            description: {{ partial_refund_case_created_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|caseCreated|resultSuccess|formV2
            type: formV2
            namespace: goToRequestInbox
            submit_button_text: {{ case_created_nav_reactive_comp }}
            on_submit:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|caseCreated|resultSuccess|formV2|navigation
                type: navigation
                destination: inbox
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|caseCreated|resultSuccess|deepLink
            type: deepLink
            deeplink_url: hungerstation://?c=SA
            deeplink_title: hungerstation://?c=SA
            submit_text: {{ homepage_deeplink }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|notAccountedError
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status != 200 AND
            $initialChecks.response.body.type NOT IN [already_routed_to_chat, already_added_to_wallet,
            voucher_already_created, already_refunded_automatically, fin_case_already_created,
            case_already_created, auto_partial_refund_not_possible]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|notAccountedError|resultError
            type: result
            result_type: ERROR
            title: {{ partial_refund_error_title }}
            description: {{ partial_refund_chat_fallback_description }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|damagedItems|notAccountedError|resultError|form
            type: form
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2H.2
              order_id: <<order.orderId>>
              transaction_id: <<order.transactionId>>
            action: chat
      - id: partialRefundV2|damagedItems|singleItem
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = True
        blocks:
          - id: partialRefundV2|damagedItems|singleItem|text
            type: richContent
            text: {{ partial_refund_main_selection }}
          - id: partialRefundV2|damagedItems|singleItem|formV2
            type: formV2
            namespace: singleItemMissingItemScale
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|singleItem|formV2|choiceGroup|missingItemScale
                type: choiceGroup
                data_key: missingItemScale
                label: {{ label_checkbox_missing_item_scale }}
                is_required: true
                blocks:
                  - id: partialRefundV2|damagedItems|singleItem|formV2|choiceGroup|checkbox|10
                    type: checkbox
                    value: minor_item
                    text: {{ partial_refund_toppings_damaged }}
                  - id: partialRefundV2|damagedItems|singleItem|formV2|choiceGroup|checkbox|30
                    type: checkbox
                    value: sub_item
                    text: {{ partial_refund_subitem_damaged }}
                  - id: partialRefundV2|damagedItems|singleItem|formV2|choiceGroup|checkbox|50
                    type: checkbox
                    value: primary_item
                    text: {{ partial_refund_main_item_damaged }}
              - id: partialRefundV2|damagedItems|singleItem|formV2|hidden|item|id|<<$index>>
                type: hidden
                value: <<item.item_id>>
                data_key: items.<<$index>>.id
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|damagedItems|singleItem|formV2|hidden|item|label|<<$index>>
                type: hidden
                value: <<item.name>>
                data_key: items.<<$index>>.label
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|damagedItems|singleItem|formV2|hidden|item|hcItemId|<<$index>>
                type: hidden
                value: <<item.hc_item_id>>
                data_key: items.<<$index>>.hc_item_id
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|damagedItems|singleItem|formV2|hidden|item|quantity|<<$index>>
                type: hidden
                value: <<item.quantity>>
                data_key: items.<<$index>>.quantity
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|damagedItems|singleItem|formV2|hidden|item|options|<<$index>>
                type: hidden
                value: <<item.options>>
                data_key: items.<<$index>>.options
                meta:
                  repeat: item in order.items
              - id: partialRefundV2|damagedItems|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|damagedItems|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_singleItem_selectRefundMethod
                type: navigation
                destination: damaged_item.pRv2_singleItem_selectRefundMethod
      - id: partialRefundV2|damagedItems|MultiItemsNoOptions
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = False
        blocks:
          - id: partialRefundV2|damagedItems|MultiItemsNoOptions|text
            type: richContent
            text: {{ sorry_damaged_items }}
          - id: partialRefundV2|damagedItems|MultiItemsNoOptions|formV2
            type: formV2
            namespace: multiItemsNoOptionsSelectedItems
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|MultiItemsNoOptions|formV2|itemQuantitySelector
                type: itemQuantitySelector
                data_key: items
                label: {{ select_the_missing_items }}
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: partialRefundV2|damagedItems|MultiItemsNoOptions|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|damagedItems|MultiItemsNoOptions|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsNoOptions_selectRefundMethod
                type: navigation
                destination: damaged_item.pRv2_multiItemsNoOptions_selectRefundMethod
      - id: partialRefundV2|damagedItems|multiItemsOptionsPrice
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = True
        blocks:
          - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|text
            type: richContent
            text: {{ sorry_damaged_items }}
          - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|formV2
            type: formV2
            namespace: multiItemsOptionsPriceSelectedItems
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|formV2|itemQuantitySelector
                type: itemQuantitySelector
                data_key: items
                label: {{ select_the_missing_items }}
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsOptionsPrice_selectRefundMethod
                type: navigation
                destination: damaged_item.pRv2_multiItemsOptionsPrice_selectRefundMethod
      - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice
        type: blockGroup
        meta:
          conditions:
            $initialChecks.response.status = 200 AND
            $initialChecks.response.body.payload.isSingleItem = False AND
            $initialChecks.response.body.payload.includesOptions = True AND
            $initialChecks.response.body.payload.everyUnitPriceIsValid = False
        blocks:
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|text
            type: richContent
            text: {{ partial_refund_main_selection }}
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2
            type: formV2
            namespace: multiItemsOptionsNoPriceMissingItemScale
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup
                type: choiceGroup
                data_key: missingItemScale
                label: {{ label_checkbox_missing_item_scale }}
                is_required: true
                blocks:
                  - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup|checkbox|10
                    type: checkbox
                    value: minor_item
                    text: {{ partial_refund_toppings_damaged }}
                  - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup|checkbox|30
                    type: checkbox
                    value: sub_item
                    text: {{ partial_refund_subitem_damaged }}
                  - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|combo|noOptionsPrice|formV2|choiceGroup|checkbox|50
                    type: checkbox
                    value: primary_item
                    text: {{ partial_refund_main_item_damaged }}
              - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_selectItems
                type: navigation
                destination: damaged_item.pRv2_multiItemsOptionsNoPrice_selectItems
  - id: damaged_item.pRv2_multiItemsOptionsNoPrice_selectItems
    title: {{ title_multiItemsOptionsNoPrice_partial_refund_damaged }}
    blocks:
      - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|text
        type: richContent
        text: {{ sorry_damaged_items }}
      - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|formV2
        type: formV2
        namespace: multiItemsOptionsNoPriceSelectedItems
        submit_button_text: {{ partial_refund_v2_nav_next_button }}
        fields:
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|formV2|itemQuantitySelector
            type: itemQuantitySelector
            data_key: items
            label: {{ select_the_missing_items }}
            is_required: true
            meta:
              is_zero_priced_order_item_options_displayed: true
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|text
            type: textArea
            label: {{ explain_the_issue }}
            data_key: description
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|image
            type: imageUploader
            is_required: true
            data_key: image
        on_submit:
          - id: navigateTo_pRv2_multiItemsOptionsNoPrice_selectRefundMethod
            type: navigation
            destination: damaged_item.pRv2_multiItemsOptionsNoPrice_selectRefundMethod
  - id: damaged_item.pRv2_singleItem_selectRefundMethod
    title: {{ refund_method_damaged }}
    blocks:
      - id: partialRefundV2|damagedItems|singleItem|selectRefundMethod
        type: blockGroup
        blocks:
          - id: partialRefundV2|damagedItems|singleItem|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|damagedItems|singleItem|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|singleItem|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|damagedItems|singleItem|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|damagedItems|singleItem|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: singleItemApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    missing_item_scale: <<$singleItemMissingItemScale.fieldValues.missingItemScale>>
                    items: <<$singleItemMissingItemScale.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2H.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.session_id >>
                    description: <<$singleItemMissingItemScale.fieldValues.description>>
                    image_url: <<$singleItemMissingItemScale.fieldValues.image>>
                next_step_id: singleItemApplyDecision
              - id: singleItemApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.singleItemApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_singleItem_voucherCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_singleItem_addedToWallet
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_singleItem_voucherCreated
                type: navigation
                destination: missing_item.pRv2_singleItem_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_singleItem_addedToWallet
                type: navigation
                destination: missing_item.pRv2_singleItem_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: damaged_item.pRv2_multiItemsNoOptions_selectRefundMethod
    title: {{ title_multiItemsNoOptions_refund_method_damaged }}
    blocks:
      - id: partialRefundV2|damagedItems|multiItemsNoOptions|selectRefundMethod
        type: blockGroup
        blocks:
          - id: partialRefundV2|damagedItems|multiItemsNoOptions|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|damagedItems|multiItemsNoOptions|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|damagedItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|damagedItems|multiItemsNoOptions|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsNoOptionsApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    items: <<$multiItemsNoOptionsSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2H.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsNoOptionsSelectedItems.fieldValues.description>>
                    image_url: <<$multiItemsNoOptionsSelectedItems.fieldValues.image>>
                next_step_id: multiItemsNoOptionsApplyDecision
              - id: multiItemsNoOptionsApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsNoOptions_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsNoOptions_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsNoOptionsApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsNoOptions_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsNoOptions_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsNoOptions_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: damaged_item.pRv2_multiItemsOptionsPrice_selectRefundMethod
    title: {{ title_multiItemsOptionsPrice_refund_method_damaged }}
    blocks:
      - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|selectRefundMethod
        type: blockGroup
        blocks:
          - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|damagedItems|multiItemsOptionsPrice|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsOptionsPriceApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    items: <<$multiItemsOptionsPriceSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2H.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsOptionsPriceSelectedItems.fieldValues.description>>
                    image_url: <<$multiItemsOptionsPriceSelectedItems.fieldValues.image>>
                next_step_id: multiItemsOptionsPriceApplyDecision
              - id: multiItemsOptionsPriceApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsOptionsPrice_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsOptionsPrice_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsPriceApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsOptionsPrice_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsOptionsPrice_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsPrice_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: damaged_item.pRv2_multiItemsOptionsNoPrice_selectRefundMethod
    title: {{ title_multiItemsOptionsNoPrice_refund_method_damaged }}
    blocks:
      - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|selectRefundMethod
        type: blockGroup
        blocks:
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|selectRefundMethod|text
            type: richContent
            text: {{ auto_refund_online_payment_description }}
          - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2
            type: formV2
            namespace: selectedRefundMethod
            submit_button_text: {{ partial_refund_v2_nav_next_button }}
            fields:
              - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup
                type: choiceGroup
                data_key: refundMethod
                label: {{ select_refund_method }}
                is_required: true
                blocks:
                  - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup|wallet
                    type: radio
                    value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - id: partialRefundV2|damagedItems|multiItemsOptionsNoPrice|selectRefundMethod|formV2|choiceGroup|OP
                    meta:
                      conditions: order.payment_type = OP
                    type: radio
                    value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
            on_submit:
              - id: multiItemsOptionsNoPriceApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/apply-refund
                  has_default_helpcenter_headers: true
                  method: POST
                  request_body_casing: snake
                  body:
                    order_id: <<order.orderId>>
                    missing_item_scale: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.missingItemScale>>
                    items: <<$multiItemsOptionsNoPriceSelectedItems.fieldValues.items>>
                    refund_method: <<$selectedRefundMethod.fieldValues.refundMethod>>
                    reason_code: 2H.2
                    transaction_id: <<transaction_id>>
                    helpcenter_session_id: << analytics.sessionId>>
                    description: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.description>>
                    image_url: <<$multiItemsOptionsNoPriceMissingItemScale.fieldValues.image>>
                next_step_id: multiItemsOptionsNoPriceApplyDecision
              - id: multiItemsOptionsNoPriceApplyDecision
                type: decision
                branches:
                  - conditions:
                      $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      IN [fraud_check_block, max_amount_exceed, auto_partial_refund_not_possible]
                      AND
                      $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.fallback.type
                      = NO_FALLBACK
                    next_step_id: navigateTo_pRv2_deflection
                  - conditions: $selectedRefundMethod.steps.singleItemApplyRequest.response.body.payload.is_full_refund
                      = True
                    next_step_id: navigateTo_wrongItems
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateTo_pRv2_multiItemsOptionsNoPrice_voucherCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateTo_pRv2_voucherAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      IN [case_created, fraud_case_created]
                    next_step_id: navigateTo_pRv2_caseCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateTo_pRv2_caseAlreadyCreated
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = order_already_refunded_external
                    next_step_id: navigateTo_pRv2_orderAlreadyRefundedExternal
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = added_to_wallet
                    next_step_id: navigateTo_pRv2_multiItemsOptionsNoPrice_addedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = already_added_to_wallet
                    next_step_id: navigateTo_pRv2_alreadyAddedToWallet
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = refunded_automatically
                    next_step_id: navigateTo_pRv2_refundedAutomatically
                  - conditions: $selectedRefundMethod.steps.multiItemsOptionsNoPriceApplyRequest.response.body.type
                      = already_refunded_automatically
                    next_step_id: navigateTo_pRv2_alreadyRefundedAutomatically
                  - next_step_id: navigateTo_pRv2_chat
              - id: navigateTo_wrongItems
                type: navigation
                destination: wrong_order.received_wrong_order_refund
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_voucherCreated
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_voucherCreated
              - id: navigateTo_pRv2_voucherAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_voucherAlreadyCreated
              - id: navigateTo_pRv2_caseCreated
                type: navigation
                destination: missing_item.pRv2_caseCreated
              - id: navigateTo_pRv2_caseAlreadyCreated
                type: navigation
                destination: missing_item.pRv2_caseAlreadyCreated
              - id: navigateTo_pRv2_deflection
                type: navigation
                destination: missing_item.pRv2_deflection
              - id: navigateTo_pRv2_orderAlreadyRefundedExternal
                type: navigation
                destination: missing_item.pRv2_orderAlreadyRefundedExternal
              - id: navigateTo_pRv2_multiItemsOptionsNoPrice_addedToWallet
                type: navigation
                destination: missing_item.pRv2_multiItemsOptionsNoPrice_addedToWallet
              - id: navigateTo_pRv2_alreadyAddedToWallet
                type: navigation
                destination: missing_item.pRv2_alreadyAddedToWallet
              - id: navigateTo_pRv2_refundedAutomatically
                type: navigation
                destination: missing_item.pRv2_refundedAutomatically
              - id: navigateTo_pRv2_alreadyRefundedAutomatically
                type: navigation
                destination: missing_item.pRv2_alreadyRefundedAutomatically
              - id: navigateTo_pRv2_chat
                type: navigation
                destination: missing_item.pRv2_chat
  - id: damaged_item.spilled_or_damaged_item
    title: {{ food_damaged_or_spilled }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged
        deflection_id: 2H.2
        meta:
          conditions:
            order.delivered_time < 720 AND
            order.status = DELIVERED
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|text
            type: richContent
            text: {{ let_us_know_which_items }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|OP
            type: form
            submit_text: {{ send }}
            action: autoPartialRefund
            meta:
              conditions:
                order.payment_type = OP AND
                order.payment_method NOT IN [cash, wallet] AND
                order.status = DELIVERED
            submit_message: {{ thanks_refund_takes_3_5_days }}
            constants:
              reason_code: 2H.2
              subject: spilled_or_damaged_item
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|OP|items
                type: itemQuantitySelector
                is_required: true
                data_key: items
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|OP|refundMethod
                type: singleSelect
                is_required: true
                data_key: refund_method
                label: {{ select_refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|text
                type: textArea
                placeholder: {{ which_item_was_spilled_or_damaged }}
                label: {{ spilled_or_damaged_item }}
                is_required: true
                data_key: description
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged||form|image
                type: imageUploader
                is_required: true
                data_key: image_url
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|COD
            type: form
            submit_text: {{ send }}
            action: autoPartialRefund
            meta:
              conditions:
                order.payment_method IN [cash, wallet] AND
                order.status = DELIVERED
            submit_message: {{ thanks_refund_takes_3_5_days }}
            constants:
              reason_code: 2H.2
              subject: spilled_or_damaged_item
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|COD|items
                type: itemQuantitySelector
                is_required: true
                data_key: items
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|COD|refundMethod
                type: singleSelect
                is_required: true
                data_key: refund_method
                label: {{ refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|COD|text
                type: textArea
                placeholder: {{ which_item_was_spilled_or_damaged }}
                label: {{ spilled_or_damaged_item }}
                is_required: true
                data_key: description
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|spilledOrDamaged|form|COD|image
                type: imageUploader
                is_required: true
                data_key: image_url
  - id: food_temperature.bad_quality_food
    title: {{ food_tempreture_text }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 2C.5
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|evaluate
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_postorder }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|voucherAlreadyCreated|deepLink|wallet
            type: deepLink
            deeplink_url: hungerstation://wallet/
            deeplink_title: wallet_link
            submit_text: {{ wallet_deeplink }}  
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|comepnsatedexternal
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = order_already_compensated_external
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|comepnsatedexternal|text
            type: richContent
            text: {{ postorder_alerady_compensated_external }}      
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|noRecommendation|evaluate
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.5
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCheckBlock|evaluate
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.5
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCheckBlock|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCheckBlock|image
                type: imageUploader
                is_required: true
                data_key: image_url
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCaseCreated|evaluate
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [fraud_case_created, case_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_foodissues }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|caseCreated|evaluate
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = case_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|caseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_foodissues }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|routeToChat|evaluate
        deflection_id: 2C.5
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|routeToChat|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.5
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|applyReq
        type: blockGroup
        deflection_id: 2C.5
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|compensation|text|accepted
            type: richContent
            text: {{ reactive_comp_proposition_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 2C.5
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|compensation|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|foodtempreture|compensation|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    reason_code: 2C.5
                    description: <<$reactiveCompApply.fieldValues.description>>
                    image_url: <<$reactiveCompApply.fieldValues.image>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPagePOST
                  - next_step_id: navigateToChatPagePOST
              - id: navigateToVoucherCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage
              - id: navigateToCaseAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPagePOST
                type: navigation
                destination: page.navigateToChatPage
  - id: food_quality.bad_smell
    title: {{ food_bad_smell_title }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 2C.16
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|evaluate
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_postorder }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|409|compensatedexternal
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = order_already_compensated_external
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|409|compensatedexternal|text
            type: richContent
            text: {{ postorder_alerady_compensated_external }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|noRecommendation|evaluate
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.16
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|fraudCheckBlock|evaluate
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.16
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|fraudCaseCreated|evaluate
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_foodissues }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|caseCreated|evaluate
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_created, case_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|caseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_foodissues }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|routeToChat|evaluate
        deflection_id: 2C.16
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|routeToChat|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.16
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|applyReq
        type: blockGroup
        deflection_id: 2C.16
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|compensation|text|accepted
            type: richContent
            text: {{ reactive_comp_proposition_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 2C.16
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|compensation|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|badQuality|compensation|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    reason_code: 2C.16
                    description: <<$reactiveCompApply.fieldValues.description>>
                    image_url: <<$reactiveCompApply.fieldValues.image>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPagePOST
                  - next_step_id: navigateToChatPagePOST
              - id: navigateToVoucherCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage
              - id: navigateToCaseAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPagePOST
                type: navigation
                destination: page.navigateToChatPage
  - id: food_quality.bad_quality_food
    title: {{ food_didnt_met_expectations }}
    meta:
      before_display:
        namespace: reactiveCompEvaluate
        endpoint:
          url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/evaluate
          method: POST
          request_body_casing: snake
          has_default_helpcenter_headers: true
          body:
            order_id: << order.orderId >>
            reason_code: 2C.2
            transaction_id: << order.transactionId >>
            helpcenter_session_id: << helpcenterSessionId >>
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|evaluate
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = voucher_already_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|voucherAlreadyCreated|text
            type: richContent
            text: {{ voucher_already_created_postorder }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|409|compensatedexternal
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = order_already_compensated_external
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|409|compensatedexternal|text
            type: richContent
            text: {{ postorder_alerady_compensated_external }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|noRecommendation|evaluate
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = no_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|noRecommendation|evaluate|text
            type: richContent
            text: {{ no_recommendation_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|noRecommendation|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.2
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|fraudCheckBlock|evaluate
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_check_block
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|fraudCheckBlock|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|fraudCheckBlock|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.2
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|fraudCaseCreated|evaluate
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = fraud_case_created
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|fraudCaseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_foodissues }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|caseCreated|evaluate
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [case_created, case_already_created]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|caseCreated|evaluate|text
            type: richContent
            text: {{ fraud_case_created_foodissues }}
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|routeToChat|evaluate
        deflection_id: 2C.2
        type: blockGroup
        meta:
          conditions: $reactiveCompEvaluate.response.body.type IN [route_to_chat, already_routed_to_chat]
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|routeToChat|evaluate|text
            type: richContent
            text: {{ fraud_check_block_postorder_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|routeToChat|evaluate|chat
            type: form
            action: chat
            submit_text: {{ start_chat }}
            constants:
              reason_code: 2C.2
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|applyReq
        type: blockGroup
        deflection_id: 2C.2
        meta:
          conditions: $reactiveCompEvaluate.response.body.type = reactive_compensation_recommendation
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|compensation|text|accepted
            type: richContent
            text: {{ reactive_comp_proposition_foodissues }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|compensation|form
            type: formV2
            namespace: reactiveCompApply
            submit_button_text: <<$reactiveCompEvaluate.response.body.payload.recommendation_value>>
              <<order.currency>>
            constants:
              reason_code: 2C.2
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|compensation|text
                type: textArea
                label: {{ explain_the_issue }}
                data_key: description
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|FoodQuality|compensation|image
                type: imageUploader
                is_required: true
                data_key: image
            on_submit:
              - id: reactiveCompApplyRequest
                type: request
                endpoint:
                  url: https://helpcenter-eu.usehurrier.com/automations/v2/reactive-compensation/apply
                  method: POST
                  has_default_helpcenter_headers: true
                  request_body_casing: snake
                  body:
                    key: <<$reactiveCompEvaluate.response.body.payload.id>>
                    order_id: <<order.orderId>>
                    reason_code: 2C.2
                    description: <<$reactiveCompApply.fieldValues.description>>
                    image_url: <<$reactiveCompApply.fieldValues.image>>
                    choice: voucher
                next_step_id: reactiveCompApplyResponse
              - id: reactiveCompApplyResponse
                type: decision
                branches:
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_created
                    next_step_id: navigateToVoucherCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_created
                    next_step_id: navigateToCaseCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = voucher_already_created
                    next_step_id: navigateToVoucherAlreadyCreatedPagePOST
                  - conditions: $reactiveCompApply.steps.reactiveCompApplyRequest.response.body.type
                      = case_already_created
                    next_step_id: navigateToCaseAlreadyCreatedPagePOST
                  - next_step_id: navigateToChatPagePOST
              - id: navigateToVoucherCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherCreatedPage
              - id: navigateToCaseCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseCreatedPage
              - id: navigateToVoucherAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToVoucherAlreadyCreatedPage
              - id: navigateToCaseAlreadyCreatedPagePOST
                type: navigation
                destination: page.navigateToCaseAlreadyCreatedPage
              - id: navigateToChatPagePOST
                type: navigation
                destination: page.navigateToChatPage
  - id: cooking_instructions_were_not_followed.instructions_not_followed
    title: {{ instructions_not_followed }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed
        deflection_id: 2C.3
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed|text
            type: richContent
            text: {{ sorry_didnt_met_your_expectations_food_instructions_not_followed }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2C.3
              subject: instructions_not_followed
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed|case|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed|case|image
                type: imageUploader
                is_required: true
                data_key: image_url
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|instructionsNotFollowed|case|text
                type: textArea
                placeholder: {{ explain_the_issue }}
                label: {{ please_write_the_details }}
                data_key: description
                is_required: true
  - id: expired_item.i_received_an_item_that_has_expired
    title: {{ button_food_expired }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|expired|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|foodIssue|expired
        deflection_id: 2H.1
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|expired|text
            type: richContent
            text: {{ items_not_delivered_text }}
          - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|expired|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2H.1
              subject: i_received_an_item_that_has_expired
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|form|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
                is_required: true
                meta:
                  is_zero_priced_order_item_options_displayed: true
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|form|text
                type: textInput
                label: {{ please_write_the_details }}
                data_key: description
                is_required: true
              - id: orders|ordersList|orderDetail|ODDelivered|foodIssue|form|image
                type: imageUploader
                data_key: image_url
                is_required: true
  - id: incorrect_invoice.customer_overcharged
    title: {{ i_ve_been_overcharged }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|recent
        type: blockGroup
        meta:
          conditions: order.delivered_time < 60
        event_id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|recent
        deflection_id: 2F.2
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|recent|text
            type: richContent
            text: {{ we_are_sorry_your_over_charged }}
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|recent|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.2
              subject: customer_overcharged
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharge|recent|message
                type: textArea
                label: {{ enter_your_message }}
                data_key: description
                is_required: true
      - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|old
        type: blockGroup
        meta:
          conditions: order.delivered_time >= 60
        event_id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|old
        deflection_id: 2F.2
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|old|text
            type: richContent
            text: {{ we_are_sorry_your_over_charged }}
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharged|old|case
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.2
              subject: customer_overcharged
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|overcharge|old|message
                type: textArea
                label: {{ enter_your_message }}
                data_key: description
                is_required: true
  - id: invoice_missing.didnt_receive_invoice
    title: {{ didnt_receive_invoice }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|didntReceiveInvoice|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|didntReceiveInvoice
        deflection_id: 2F.1
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|didntReceiveInvoice|text
            type: richContent
            text: {{ didnt_recieve_invoice_for_order }}
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|didntReceiveInvoice|backToOrderButton
            type: deepLink
            deeplink_url: hungerstation://?c=SA&s=o&id=<<order_id>>
            deeplink_title: otp_deeplink
            submit_text: {{button_back_to_order}} 
  - id: other_voucher_inquiry.my_voucher_didnt_applied
    title: {{ my_voucher_was_not_applied }}
    blocks:
      - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|myVoucherDidntApplied|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|myVoucherDidntApplied
        deflection_id: 3C.8
        blocks:
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|myVoucherDidntApplied|text
            type: richContent
            text: {{ we_are_Sorry_your_voucher_wasnt_applied }}
          - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|myVoucherDidntApplied|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_a_lot_get_back_to_you_in_3_days }}
            action: chat
            constants:
              reason_code: 3C.8
              subject: my_voucher_didnt_applied
            fields:
              - id: orders|ordersList|orderDetail|ODDelivered|paymentOrRefund|myVoucherDidntApplied|message
                type: textArea
                label: {{ enter_your_message }}
                data_key: description
                is_required: true
  - id: change_food_items.change_items
    title: {{ change_item_in_my_order }}
    blocks:
      - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pending
        event_id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pending
        deflection_id: 1B.2
        type: blockGroup
        meta:
          conditions: order.status IN [PENDING, TRANSMITTED, SENT_TO_TRANSMISSION, REACHING_TRANSMISSION_FAILED,
            SENT_TO_LOGISTICS, SENDING_TO_VENDOR, DISPLAYED_AT_VENDOR, WAITING_FOR_VALIDATION]
        blocks:
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pending|text
            type: richContent
            text: {{ change_item_pending }}
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pending|form
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 1B.2
              subject: change_items
            fields:
              - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pending|form|message
                type: textArea
                placeholder: {{ change_your_order }}
                data_key: description
      - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|acceptedEarly
        event_id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|acceptedEarly
        deflection_id: 1B.2
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.accepted_time < 10 AND
            order.payment_type = COD
        blocks:
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|acceptedEarly|1
            type: richContent
            text: {{ make_changes_by_calling_vendor }}
      - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|OPAcceptedEarly
        event_id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|OPAcceptedEarly
        deflection_id: 1B.2
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.accepted_time < 10 AND
            order.payment_type = OP
        blocks:
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|OPAcceptedEarly|1
            type: richContent
            text: {{ may_make_changes_by_calling_vendor }}
      - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|late
        event_id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|late
        deflection_id: 1B.2
        type: blockGroup
        meta:
          conditions:
            order.status IN [ACCEPTED, COURIER_NEAR_PICK_UP, ORDER_PREPARED] AND
            order.accepted_time >= 10
        blocks:
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|late|text
            type: richContent
            text: {{ try_make_changes_by_calling_vendor }}
      - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pickedUp
        event_id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pickedUp
        deflection_id: 1B.2
        type: blockGroup
        meta:
          conditions: order.status IN [PICKED_UP, COURIER_LEFT_PICK_UP, COURIER_NEAR_DROP_OFF]
        blocks:
          - id: orders|ordersList|orderDetail|VD|changeOrder|changeItems|pickedUp|text
            type: richContent
            text: {{ try_make_changes_by_calling_vendor }}
  - id: damaged_item.3
    title: {{ food_damaged_or_spilled }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent
        type: blockGroup
        event_id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent
        deflection_id: 2H.2
        meta:
          conditions:
            order.delivered_time < 1440 AND
            order.status = DELIVERED
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|text
            type: richContent
            text: {{ let_us_know_which_items }}
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|OP
            type: form
            submit_text: {{ send }}
            action: autoPartialRefund
            meta:
              conditions:
                order.payment_type = OP AND
                order.payment_method NOT IN [cash, wallet] AND
                order.vertical_type = restaurants AND
                order.status = DELIVERED
            submit_message: {{ thanks_refund_takes_3_5_days }}
            constants:
              reason_code: 2H.2
              subject: spilled_or_damaged_item
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|OP|items
                type: itemQuantitySelector
                is_required: true
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|OP|refundMethod
                type: singleSelect
                is_required: true
                data_key: refund_method
                label: {{ select_refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
                  - value: online_payment
                    text: {{ online_payment_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|OP|text
                type: textArea
                placeholder: {{ which_item_was_spilled_or_damaged }}
                label: {{ spilled_or_damaged_item }}
                is_required: true
                data_key: description
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|OP|image
                type: imageUploader
                is_required: true
                data_key: image_url
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|COD
            type: form
            submit_text: {{ send }}
            action: autoPartialRefund
            meta:
              conditions:
                order.payment_method IN [cash, wallet] AND
                order.vertical_type = restaurants AND
                order.status = DELIVERED
            submit_message: {{ thanks_refund_takes_3_5_days }}
            constants:
              reason_code: 2H.2
              subject: spilled_or_damaged_item
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|COD|items
                type: itemQuantitySelector
                is_required: true
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|COD|refundMethod
                type: singleSelect
                is_required: true
                data_key: refund_method
                label: {{ refund_method }}
                choices:
                  - value: wallet
                    text: {{ voucher_auto_partial_refund }}
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|COD|text
                type: textArea
                placeholder: {{ which_item_was_spilled_or_damaged }}
                label: {{ spilled_or_damaged_item }}
                is_required: true
                data_key: description
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|form|COD|image
                type: imageUploader
                is_required: true
                data_key: image_url
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old
        type: blockGroup
        event_id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old
        deflection_id: 2H.2
        meta:
          conditions: order.delivered_time >= 1440
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old|text
            type: richContent
            text: {{ let_us_know_which_items }}
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old|case
            type: form
            submit_text: {{ start_chat }}
            action: chat
            submit_message: {{ thanks_refund_takes_3_5_days }}
            constants:
              reason_code: 2H.2
              subject: i_can_not_find_my_order
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old|case|items
                type: itemQuantitySelector
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old|case|message
                type: textArea
                data_key: description
                label: {{ explain_the_issue }}
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|old|case|image
                type: imageUploader
                data_key: image_url
                is_required: true
  - id: damaged_item.spilled_or_damaged_item_2
    title: {{ food_damaged_or_spilled }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|text|1
        type: richContent
        text: {{ let_us_know_which_items }}
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|case
        type: form
        submit_text: {{ start_chat }}
        action: chat
        submit_message: {{ thanks_refund_takes_3_5_days }}
        constants:
          reason_code: 2H.2
          subject: spilled_or_damaged_item
        fields:
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|chat|items
            type: itemQuantitySelector
            data_key: items
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|spilledOrDamaged|recent|chat|text
            type: textArea
            placeholder: {{ which_item_was_spilled_or_damaged }}
            label: {{ spilled_or_damaged_item }}
            data_key: description
  - id: food_quality.bad_quality_food_2
    title: {{ food_didnt_met_expectations }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality|1
        type: blockGroup
        deflection_id: 2C.2
        event_id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality|text
            type: richContent
            text: {{ food_bad_quality_details }}
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality|chat
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2C.2
              subject: bad_quality_food
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality|chat|items
                type: orderItemSelection
                label: {{ select_the_bad_quality_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|badQuality|chat|text
                type: textArea
                placeholder: {{ which_item_bad_quality }}
                label: {{ bad_quality_item }}
                data_key: description
                is_required: true
  - id: cooking_instructions_were_not_followed.food_instructions_not_followed
    title: {{ instructions_not_followed }}
    blocks:
      - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed|1
        type: blockGroup
        deflection_id: 2C.3
        event_id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed
        blocks:
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed|text
            type: richContent
            text: {{ sorry_didnt_met_your_expectations_food_instructions_not_followed }}
          - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed|case
            type: form
            submit_text: {{ start_chat }}
            submit_message: {{ thanks_we_will_check }}
            action: chat
            constants:
              reason_code: 2C.3
              subject: food_instructions_not_followed
            fields:
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed|case|items
                type: orderItemSelection
                label: {{ select_the_items }}
                data_key: items
              - id: orders|ordersList|orderDetail|VDDelivered|foodIssue|instructionsNotFollowed|case|text
                type: textArea
                placeholder: {{ please_write_the_details }}
                label: {{ please_write_the_details }}
                data_key: description
                is_required: true
  - id: incorrect_invoice_details.receipt_is_different
    title: {{ receipt_is_different_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|receiptIsDifferent|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|receiptIsDifferent
        deflection_id: 2F.3
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|receiptIsDifferent|text
            type: richContent
            text: {{ receipt_is_different_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|receiptIsDifferent|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.3
              subject: receipt_is_different
  - id: incorrect_invoice.receipt_is_different
    title: {{ paid_twice_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|paidTwice|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|paidTwice
        deflection_id: 2F.2
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|paidTwice|2
            type: richContent
            text: {{ paid_twice_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|paidTwice|chat
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.2
              subject: receipt_is_different
  - id: invoice_missing.didnt_receive_invoice_5
    title: {{ didnt_receive_invoice_courier_btn }}
    blocks:
      - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|didntReceiveInvoice|1
        event_id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|didntReceiveInvoice
        deflection_id: 2F.1
        type: blockGroup
        blocks:
          - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|didntReceiveInvoice|2
            type: richContent
            text: {{ didnt_receive_invoice_courier_body }}
          - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|didntReceiveInvoice|case
            type: form
            submit_text: {{ start_chat }}
            action: chat
            constants:
              reason_code: 2F.1
              subject: didnt_receive_invoice
            fields:
              - id: orders|ordersList|orderDetail|courier|Delivered|questionOnPayment|didntReceiveInvoice|case|message
                type: textArea
                data_key: description
                label: {{ explain_the_issue }}
                placeholder: {{ write_something }}
                is_required: true
  - id: rider_tip_inquiry.1
    title: {{should_i_tip}} 
    blocks:
      - id: faq|rider|shouldITip
        type: blockGroup
        blocks:
          - id: faq|shouldITip
            type: richContent
            text: {{tip_is_voluntary_but_appreciated}}

# AUTOCANCEL POSTVA - cancel accepted order post vendor refund true
  - id: cancellation.cancel_accepted_order_refund_true
    title: {{ order_cancellation_title }}
    blocks:
      - id: orders|ordersList|orderDetail|OD|cancelMyOrder|Accepted|1
        type: blockGroup
        event_id: orders|ordersList|orderDetail|OD|cancelMyOrder|Accepted
        deflection_id: 1C
        blocks:
          - id: orders|ordersList|orderDetail|OD|cancelMyOrder|Accepted|text
            type: richContent
            text: {{ choose_a_reason_to_cancel }}
          - id: autoCancellation|selectReason|form|1
            type: formV2
            namespace: autocancellationSelectionReasonTrue
            submit_button_text: {{ button_next }}
            fields:
              - id: autoCancellation|selectReason|choiceGroup
                type: choiceGroup
                data_key: autoCancellationReasonCode
                label: {{ label_radio_guest }}
                is_required: true
                blocks:
                  - id: autoCancellation|selectReason|radio|ssfOrderDelayed
                    type: radio
                    value: ssf_order_delayed
                    text: {{ ssf_order_delayed }}
                  - id: autoCancellation|selectReason|radio|ssfOrderModifications
                    type: radio
                    value: ssf_order_modifications
                    text: {{ ssf_order_modifications }}
            on_submit:
              - id: autoCancellationRequest
                type: request
                action:
                  type: autoCancellation
                  params:
                    is_refundable: true
                    order_id: << order.orderId >>
                    platform_code: << $autocancellationSelectionReasonTrue.fieldValues.autoCancellationReasonCode >>
                next_step_id: autoCancellationDecision
              - id: autoCancellationDecision
                type: decision
                # In the decision process, you can dictate which result page the user will land
                # based on the conditions you define.
                branches:
                  # Like "fieldValues", The namespace "autocancellationSelectionReasonTrue" has another built-in-drawer(let's say) called "steps",
                  # which collects the response data of the request made just few milliseconds ago based on the request id.
                  - conditions: $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.status = 200 AND
                      $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.body.type = ORDER_CANCELLED
                    next_step_id: navigateToOrderCancelledPage
                
                  - conditions: $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.body.type = UNEXPECTED AND
                      $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.body.fallback.type = CASE
                    next_step_id: navigateToCaseCreatedPage
                
                  - conditions: $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.body.type = UNEXPECTED AND
                      $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.body.fallback.type = NO_FALLBACK
                    next_step_id: navigateToNoFallbackPage
                
                  - conditions: $autocancellationSelectionReasonTrue.steps.autoCancellationRequest.response.body.type IN [INVALID_CANCEL_REASON, CANCELLATION_ERROR]
                    next_step_id: navigateToNoFallbackPage
                
                  # This (the last) is the default result page when none of the conditions above were met
                  - next_step_id: navigateToChatPage
                
                            # These "navigation" blocks correspond to the conditions you defined in the decision branches.
                            # Of course, the destination pages should be defined according to the business/product needs,
                            # which is not covered here.
                            # It's important that the first navigation block matches the first branch in decision.
                            # All the rest of the steps are resolved according to conditions and referenced by next_step_id.
              - id: navigateToOrderCancelledPage
                type: navigation
                destination: page.navigateToOrderCancelledPage
                
              - id: navigateToCaseCreatedPage
                type: navigation
                destination: page.navigateToCaseCreatedPage
                
              - id: navigateToNoFallbackPage
                type: navigation
                destination: page.navigateToNoFallbackPage
                
              - id: navigateToChatPage
                type: navigation
                destination: page.navigateToChatPage

  - id: page.navigateToNoFallbackPage
    title: {{ no_fallback_title_cancellation}}
    blocks:
      - id: cancellation|result|error
        type: result
        result_type: ERROR
        title: {{ no_fallback_title_cancellation }}
        description: {{ no_fallback_desc_cancellation }}
      - id: reactiveCompensation|result|navigateTochat
        type: form
        submit_text: {{ start_chat }}
        action: chat
        constants:
          reason_code: 1C.1
          subject: cancel_order

  - id: page.navigateToOrderCancelledPage
    title: {{ order_cancelled_title }}
    blocks:
      - id: cancellation|result|error
        type: result
        result_type: SUCCESS
        title: {{ order_cancelled_title }}
        description: {{ order_cancelled_description }}
      - id: reactiveCompensation|result|navigateToCaseInbox
        type: formV2
        namespace: navigateToMainMenu
        submit_button_text: {{ go_to_main_menu }}
        on_submit:
          - id: navigateToMainMenu
            type: navigation
            destination: mainMenu